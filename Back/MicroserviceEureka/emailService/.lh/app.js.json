{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1748478604298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748479236490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n const express = require('express');\r\n const cors = require('cors');\r\n-const apiRouter = require('./routes/api');\r\n+const authRoutes = require('./src/routes/auth.routes');\r\n+const emailRoutes = require('./src/routes/email.routes');\r\n+const draftRoutes = require('./src/routes/draft.routes');\r\n+const tokenRoutes = require('./src/routes/token.routes');\r\n \r\n const app = express();\r\n \r\n // Middleware\r\n"
                },
                {
                    "date": 1748479255634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,10 @@\n app.use(cors());\r\n app.use(express.json());\r\n \r\n // Routes\r\n-app.use('/', apiRouter);\r\n+app.use('/auth', authRoutes);\r\n+app.use('/emails', emailRoutes);\r\n+app.use('/drafts', draftRoutes);\r\n+app.use('/token', tokenRoutes);\r\n \r\n module.exports = app;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749304978435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,111 @@\n-const express = require('express');\r\n-const cors = require('cors');\r\n-const authRoutes = require('./src/routes/auth.routes');\r\n-const emailRoutes = require('./src/routes/email.routes');\r\n-const draftRoutes = require('./src/routes/draft.routes');\r\n-const tokenRoutes = require('./src/routes/token.routes');\r\n-\r\n+require(\"dotenv\").config();\r\n+const express = require(\"express\");\r\n+const cors = require(\"cors\");\r\n+const Eureka = require('eureka-js-client').Eureka;\r\n+const { startEmailNotificationConsumer } = require('./src/consumer/emailNotificationConsumer');\r\n+const { initSystemAccountToken } = require('./src/utils/tokenStorage');\r\n+const { initializeSystemAuth } = require('./src/services/systemAuthService');\r\n const app = express();\r\n \r\n-// Middleware\r\n-app.use(cors());\r\n+// Middlewares\r\n+// 1. Configuration CORS améliorée\r\n\\ No newline at end of file\n+const corsOptions = {\r\n+  origin: ['http://localhost:4200', 'https://e8.systeo.tn'],\r\n+  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n+  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n+  credentials: true,\r\n+  optionsSuccessStatus: 204\r\n+};\r\n+\r\n+app.use(cors(corsOptions));\r\n app.use(express.json());\r\n \r\n-// Routes\r\n-app.use('/auth', authRoutes);\r\n-app.use('/emails', emailRoutes);\r\n-app.use('/drafts', draftRoutes);\r\n-app.use('/token', tokenRoutes);\r\n \r\n-module.exports = app;\n+// Importer les routes\r\n+const authRoutes = require(\"./src/routes/authRoutes\");\r\n+const emailRoutes = require(\"./src/routes/emailRoutes\");\r\n+const draftRoutes = require(\"./src/routes/draftRoutes\");\r\n+const PORT = process.env.PORT || 8079;\r\n+const client = new Eureka({\r\n+  instance: {\r\n+    app: 'emailService',\r\n+    instanceId: `e8.systeo.tn:emailService:${PORT}`, // Ajoutez ceci\r\n+    hostName: 'e8.systeo.tn',\r\n+    ipAddr: '161.97.88.195',\r\n+    port: {\r\n+      '$': PORT,\r\n+      '@enabled': 'true',\r\n+    },\r\n+    vipAddress: 'emailService',\r\n+    dataCenterInfo: {\r\n+      '@class': 'com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo',\r\n+      name: 'MyOwn',\r\n+    },\r\n+    // Ajoutez ces métadonnées si nécessaire\r\n+    metadata: {\r\n+      'management.port': PORT,\r\n+      'securePort': 443,\r\n+      'securePortEnabled': 'true'\r\n+    }\r\n+  },\r\n+  eureka: {\r\n+    host: 'eureka.systeo.tn',\r\n+    port: 443,\r\n+    servicePath: '/eureka/apps/',\r\n+    ssl: true,\r\n+  },\r\n+});\r\n+\r\n+// Démarrer le client Eureka\r\n+client.start(error => {\r\n+  console.log(error || 'Client Eureka démarré avec succès');\r\n+});\r\n+\r\n+// Gestion de la fermeture propre\r\n+process.on('SIGINT', () => {\r\n+  client.stop();\r\n+  process.exit();\r\n+});\r\n+\r\n+// Utiliser les routes\r\n+app.use(\"/auth\", authRoutes);\r\n+app.use(\"/emails\", emailRoutes); // Préfixe pour toutes les routes liées aux emails\r\n+app.use(\"/drafts\", draftRoutes); // Préfixe pour toutes les routes liées aux brouillons\r\n+\r\n+// Route de base pour vérifier si le serveur fonctionne\r\n+app.get(\"/\", (req, res) => {\r\n+  res.send(\"Serveur API Gmail fonctionnel.\");\r\n+});\r\n+\r\n+// Gestionnaire d'erreurs global (optionnel mais recommandé)\r\n+app.use((err, req, res, next) => {\r\n+  console.error(\"Erreur non gérée:\", err.stack);\r\n+  res.status(500).json({ success: false, error: \"Erreur interne du serveur.\" });\r\n+});\r\n+\r\n+app.listen(PORT, async () => {\r\n+  console.log(`Serveur démarré sur le port ${PORT}`);\r\n+  console.log(\"Endpoints disponibles:\");\r\n+  console.log(`GET  /auth/google`);\r\n+  console.log(`GET  /auth/google/callback`);\r\n+  console.log(`POST /auth/refresh-token`);\r\n+  console.log(`POST /emails/send`);\r\n+  console.log(`GET  /emails/sent`);\r\n+  console.log(`GET  /emails/inbox`);\r\n+  console.log(`POST /emails/mark-as-read`);\r\n+  console.log(`GET  /emails/check-read/:emailId`);\r\n+  console.log(`DELETE /emails/:emailId`);\r\n+  console.log(`POST /emails/:emailId/restore`);\r\n+  console.log(`GET  /drafts`);\r\n+  console.log(`DELETE /drafts/:draftId`);\r\n+  try {\r\n+    // Initialiser l'authentification système\r\n+    await initializeSystemAuth();\r\n+    \r\n+    // Démarrer le consumer RabbitMQ\r\n+    await startEmailNotificationConsumer();\r\n+  } catch (error) {\r\n+    console.error('Erreur lors de l\\'initialisation:', error);\r\n+    process.exit(1);\r\n+  }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749630011187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n // Middlewares\r\n // 1. Configuration CORS améliorée\r\n const corsOptions = {\r\n-  origin: ['http://localhost:4200', 'https://e8.systeo.tn',],\r\n+  origin: ['http://localhost:4200', 'https://e8.systeo.tn',\"\"],\r\n   methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n   allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n   credentials: true,\r\n   optionsSuccessStatus: 204\r\n"
                }
            ],
            "date": 1748478604298,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst cors = require('cors');\r\nconst apiRouter = require('./routes/api');\r\n\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Routes\r\napp.use('/', apiRouter);\r\n\r\nmodule.exports = app;"
        }
    ]
}