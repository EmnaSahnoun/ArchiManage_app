{
    "sourceFile": "src/app/super-admin/user-form/user-form.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 69,
            "patches": [
                {
                    "date": 1744030117160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744030145566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { Component } from '@angular/core';\r\n+import { FormGroup } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'app-user-form',\r\n   templateUrl: './user-form.component.html',\r\n@@ -32,6 +33,4 @@\n   onCancel() {\r\n     this.dialogRef.close();\r\n   }\r\n }\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1744030617685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,16 @@\n-import { Component } from '@angular/core';\r\n-import { FormGroup } from '@angular/forms';\r\n+import { Component, Inject, OnInit } from '@angular/core';\r\n+import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n+import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n \r\n @Component({\r\n   selector: 'app-user-form',\r\n   templateUrl: './user-form.component.html',\r\n   styleUrl: './user-form.component.scss'\r\n })\r\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n-  roles = ['Admin', 'Agent', 'Manager'];\r\n+  roles = ['Admin', 'User', 'Manager'];\r\n \r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n"
                },
                {
                    "date": 1744990314860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   styleUrl: './user-form.component.scss'\r\n })\r\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n-  roles = ['Admin', 'User', 'Manager'];\r\n+  roles = ['Admin', 'User'];\r\n \r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n@@ -18,8 +18,9 @@\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n+      \r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744990320246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n-      \r\n+      password\r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744990326990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n-      password\r\n+      password:['',]\r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744990334877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n-      password:['',]\r\n+      password:['',Validators.required]\r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744991364450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,19 @@\n })\r\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles = ['Admin', 'User'];\r\n-\r\n+  roles: string[] = [];\r\n+  isLoading = false;\r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n-      password:['',Validators.required]\r\n+      password:['',Validators.required],\r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744991371244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n   styleUrl: './user-form.component.scss'\r\n })\r\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n-  roles = ['Admin', 'User'];\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n+  \r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any\r\n"
                },
                {
                    "date": 1744991389933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,14 @@\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n-  \r\n+\r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n-    @Inject(MAT_DIALOG_DATA) public data: any\r\n+    @Inject(MAT_DIALOG_DATA) public data: any,\r\n+    private\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1744991399053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n-    private\r\n+    private user\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1744991405631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n-    private user\r\n+    private userService:U\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1744991411546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Component, Inject, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n+import { UserService } from '../../services/UserService';\r\n \r\n @Component({\r\n   selector: 'app-user-form',\r\n   templateUrl: './user-form.component.html',\r\n@@ -15,9 +16,9 @@\n   constructor(\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n-    private userService:U\r\n+    private userService:UserService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       name: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1744991433601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n-      name: ['', Validators.required],\r\n+      username: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n-      password:['',Validators.required],\r\n+      password: ['', [Validators.required, Validators.minLength(8)]],\r\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1744991439559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,11 @@\n       role: ['', Validators.required]\r\n     });\r\n   }\r\n \r\n-  ngOnInit(): void {}\r\n+  ngOnInit(): void {\r\n+    \r\n+  }\r\n \r\n   onSubmit() {\r\n     if (this.userForm.valid) {\r\n       this.dialogRef.close(this.userForm.value);\r\n"
                },
                {
                    "date": 1744991445008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    \r\n+    this.loadRoles();\r\n   }\r\n \r\n   onSubmit() {\r\n     if (this.userForm.valid) {\r\n"
                },
                {
                    "date": 1744991455383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,16 @@\n \r\n   ngOnInit(): void {\r\n     this.loadRoles();\r\n   }\r\n-\r\n+  loadRoles(): void {\r\n+    this.keycloakService.getRoles().subscribe({\r\n+      next: (roles) => {\r\n+        this.roles = roles.map((r: any) => r.name);\r\n+      },\r\n+      error: (err) => console.error('Failed to load roles', err)\r\n+    });\r\n+  }\r\n   onSubmit() {\r\n     if (this.userForm.valid) {\r\n       this.dialogRef.close(this.userForm.value);\r\n     }\r\n"
                },
                {
                    "date": 1744991460633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   ngOnInit(): void {\r\n     this.loadRoles();\r\n   }\r\n   loadRoles(): void {\r\n-    this.keycloakService.getRoles().subscribe({\r\n+    this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n         this.roles = roles.map((r: any) => r.name);\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n"
                },
                {
                    "date": 1744991506522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,70 @@\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n-  onSubmit() {\r\n+  onSubmit(): void {\r\n     if (this.userForm.valid) {\r\n-      this.dialogRef.close(this.userForm.value);\r\n+      this.isLoading = true;\r\n+      const formValue = this.userForm.value;\r\n+\r\n+      const userData = {\r\n+        username: formValue.username,\r\n+        email: formValue.email,\r\n+        enabled: true,\r\n+        credentials: [{\r\n+          type: 'password',\r\n+          value: formValue.password,\r\n+          temporary: false\r\n+        }]\r\n+      };\r\n+\r\n+      this.keycloakService.createUser(userData).subscribe({\r\n+        next: (response) => {\r\n+          // Trouver l'ID de l'utilisateur créé (peut nécessiter une requête supplémentaire)\r\n+          this.assignRoleToUser(formValue.username, formValue.role);\r\n+        },\r\n+        error: (err) => {\r\n+          console.error('Failed to create user', err);\r\n+          this.isLoading = false;\r\n+        }\r\n+      });\r\n     }\r\n   }\r\n \r\n-  onCancel() {\r\n+  private assignRoleToUser(username: string, roleName: string): void {\r\n+    // D'abord, trouver l'ID de l'utilisateur\r\n+    this.keycloakService.getUsers().subscribe({\r\n+      next: (users) => {\r\n+        const user = users.find((u: any) => u.username === username);\r\n+        if (user) {\r\n+          // Ensuite, trouver le rôle\r\n+          this.keycloakService.getRoles().subscribe({\r\n+            next: (roles) => {\r\n+              const role = roles.find((r: any) => r.name === roleName);\r\n+              if (role) {\r\n+                this.keycloakService.assignRoleToUser(user.id, role).subscribe({\r\n+                  next: () => {\r\n+                    this.isLoading = false;\r\n+                    this.dialogRef.close({ success: true });\r\n+                  },\r\n+                  error: (err) => {\r\n+                    console.error('Failed to assign role', err);\r\n+                    this.isLoading = false;\r\n+                  }\r\n+                });\r\n+              }\r\n+            }\r\n+          });\r\n+        }\r\n+      },\r\n+      error: (err) => {\r\n+        console.error('Failed to find user', err);\r\n+        this.isLoading = false;\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  onCancel(): void {\r\n     this.dialogRef.close();\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1744991513437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n   }\r\n \r\n   private assignRoleToUser(username: string, roleName: string): void {\r\n     // D'abord, trouver l'ID de l'utilisateur\r\n-    this.keycloakService.getUsers().subscribe({\r\n+    this.userService.getUsers().subscribe({\r\n       next: (users) => {\r\n         const user = users.find((u: any) => u.username === username);\r\n         if (user) {\r\n           // Ensuite, trouver le rôle\r\n"
                },
                {
                    "date": 1744991523044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,13 +73,13 @@\n       next: (users) => {\r\n         const user = users.find((u: any) => u.username === username);\r\n         if (user) {\r\n           // Ensuite, trouver le rôle\r\n-          this.keycloakService.getRoles().subscribe({\r\n+          this.userService.getRoles().subscribe({\r\n             next: (roles) => {\r\n               const role = roles.find((r: any) => r.name === roleName);\r\n               if (role) {\r\n-                this.keycloakService.assignRoleToUser(user.id, role).subscribe({\r\n+                this.userService.assignRoleToUser(user.id, role).subscribe({\r\n                   next: () => {\r\n                     this.isLoading = false;\r\n                     this.dialogRef.close({ success: true });\r\n                   },\r\n"
                },
                {
                    "date": 1744991535102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n           temporary: false\r\n         }]\r\n       };\r\n \r\n-      this.keycloakService.createUser(userData).subscribe({\r\n+      this.userService.createUser(userData).subscribe({\r\n         next: (response) => {\r\n           // Trouver l'ID de l'utilisateur créé (peut nécessiter une requête supplémentaire)\r\n           this.assignRoleToUser(formValue.username, formValue.role);\r\n         },\r\n"
                },
                {
                    "date": 1745063309440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,12 @@\n   roles: string[] = [];\r\n   isLoading = false;\r\n \r\n   constructor(\r\n+    public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n+    private userService: UserService\r\n+    private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n   ) {\r\n"
                },
                {
                    "date": 1745063318664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,10 @@\n   roles: string[] = [];\r\n   isLoading = false;\r\n \r\n   constructor(\r\n-    public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n+    public activeModal: NgbActiveModal,\r\n     private fb: FormBuilder,\r\n-    private userService: UserService\r\n-    private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n   ) {\r\n"
                },
                {
                    "date": 1745063324821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   roles: string[] = [];\r\n   isLoading = false;\r\n \r\n   constructor(\r\n-    public activeModal: NgbActiveModal,\r\n+    public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n"
                },
                {
                    "date": 1745063342599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { Component, Inject, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n import { UserService } from '../../services/UserService';\r\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n \r\n @Component({\r\n   selector: 'app-user-form',\r\n   templateUrl: './user-form.component.html',\r\n@@ -101,7 +102,7 @@\n     });\r\n   }\r\n \r\n   onCancel(): void {\r\n-    this.dialogRef.close();\r\n+    this.activeModal.dismiss();\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1745063416052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n               if (role) {\r\n                 this.userService.assignRoleToUser(user.id, role).subscribe({\r\n                   next: () => {\r\n                     this.isLoading = false;\r\n-                    this.dialogRef.close({ success: true });\r\n+                    this.activeModal.close({ success: true });\r\n                   },\r\n                   error: (err) => {\r\n                     console.error('Failed to assign role', err);\r\n                     this.isLoading = false;\r\n"
                },
                {
                    "date": 1745063753864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n-\r\n+  @Input() agencyId: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n"
                },
                {
                    "date": 1745063759065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component, Inject, OnInit } from '@angular/core';\r\n+import { Component, Inject, Input, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n import { UserService } from '../../services/UserService';\r\n import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n"
                },
                {
                    "date": 1745063769410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n-  @Input() agencyId: string;\r\n+  @Input() agencyId!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private dialogRef: MatDialogRef<UserFormComponent>,\r\n"
                },
                {
                    "date": 1745065046097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n   @Input() agencyId!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n-    private dialogRef: MatDialogRef<UserFormComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n"
                },
                {
                    "date": 1745065091288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import { Component, Inject, Input, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n-import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n import { UserService } from '../../services/UserService';\r\n import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n \r\n @Component({\r\n@@ -16,9 +15,8 @@\n   @Input() agencyId!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n-    @Inject(MAT_DIALOG_DATA) public data: any,\r\n     private userService:UserService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       username: ['', Validators.required],\r\n"
                },
                {
                    "date": 1745065101472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component, Inject, Input, OnInit } from '@angular/core';\r\n+import { Component,  Input, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { UserService } from '../../services/UserService';\r\n import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n \r\n"
                },
                {
                    "date": 1745065203499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n+    cons\r\n     this.loadRoles();\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n"
                },
                {
                    "date": 1745065212075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    cons\r\n+    console.log(\"voici le token\")\r\n     this.loadRoles();\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n"
                },
                {
                    "date": 1745065221815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    console.log(\"voici le token\")\r\n+    console.log(\"voici le token\",localStorage.)\r\n     this.loadRoles();\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n"
                },
                {
                    "date": 1745065227606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    console.log(\"voici le token\",localStorage.)\r\n+    console.log(\"voici le token\",localStorage.getItem(\"token\"))\r\n     this.loadRoles();\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n"
                },
                {
                    "date": 1745065493277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n+        console.log(\"les roles avant la récupératioon\")\r\n         this.roles = roles.map((r: any) => r.name);\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n"
                },
                {
                    "date": 1745065501205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n-        console.log(\"les roles avant la récupératioon\")\r\n+        console.log(\"les roles avant la récupération\",this.roels)\r\n         this.roles = roles.map((r: any) => r.name);\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n"
                },
                {
                    "date": 1745065508365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,11 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n-        console.log(\"les roles avant la récupération\",this.roels)\r\n+        console.log(\"les roles avant la récupération\",this.roles)\r\n         this.roles = roles.map((r: any) => r.name);\r\n+        console.log(\"les roles avant la récupération\",this.roles)\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n"
                },
                {
                    "date": 1745312812693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,41 +34,47 @@\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n         console.log(\"les roles avant la récupération\",this.roles)\r\n         this.roles = roles.map((r: any) => r.name);\r\n-        console.log(\"les roles avant la récupération\",this.roles)\r\n+        console.log(\"les roles apresssss la récupération\",this.roles)\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n     if (this.userForm.valid) {\r\n-      this.isLoading = true;\r\n-      const formValue = this.userForm.value;\r\n+        this.isLoading = true;\r\n+        const formValue = this.userForm.value;\r\n \r\n-      const userData = {\r\n-        username: formValue.username,\r\n-        email: formValue.email,\r\n-        enabled: true,\r\n-        credentials: [{\r\n-          type: 'password',\r\n-          value: formValue.password,\r\n-          temporary: false\r\n-        }]\r\n-      };\r\n+        const userData = {\r\n+            username: formValue.username,\r\n+            email: formValue.email,\r\n+            enabled: true,\r\n+            credentials: [{\r\n+                type: 'password',\r\n+                value: formValue.password,\r\n+                temporary: false\r\n+            }]\r\n+        };\r\n \r\n-      this.userService.createUser(userData).subscribe({\r\n-        next: (response) => {\r\n-          // Trouver l'ID de l'utilisateur créé (peut nécessiter une requête supplémentaire)\r\n-          this.assignRoleToUser(formValue.username, formValue.role);\r\n-        },\r\n-        error: (err) => {\r\n-          console.error('Failed to create user', err);\r\n-          this.isLoading = false;\r\n-        }\r\n-      });\r\n+        // Utilisez la nouvelle méthode du service\r\n+        this.userService.createUserWithRoleAndGroup(\r\n+            userData, \r\n+            formValue.role,\r\n+            this.agencyId // Supposant que agencyId est le nom du groupe\r\n+        ).subscribe({\r\n+            next: () => {\r\n+                this.isLoading = false;\r\n+                this.activeModal.close({ success: true });\r\n+            },\r\n+            error: (err) => {\r\n+                console.error('Erreur lors de la création', err);\r\n+                this.isLoading = false;\r\n+                // Afficher un message d'erreur à l'utilisateur\r\n+            }\r\n+        });\r\n     }\r\n-  }\r\n+}\r\n \r\n   private assignRoleToUser(username: string, roleName: string): void {\r\n     // D'abord, trouver l'ID de l'utilisateur\r\n     this.userService.getUsers().subscribe({\r\n"
                },
                {
                    "date": 1745312820493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n             }]\r\n         };\r\n \r\n         // Utilisez la nouvelle méthode du service\r\n-        this.userService.createUserWithRoleAndGroup(\r\n+        this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n             this.agencyId // Supposant que agencyId est le nom du groupe\r\n         ).subscribe({\r\n"
                },
                {
                    "date": 1745312828987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n   @Input() agencyId!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n-    private userService:UserService\r\n+    private userService:UserService,\r\n+    private agenceService:AgenceService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       username: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1745312865524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { Component,  Input, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { UserService } from '../../services/UserService';\r\n import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n+import { AgenceService } from '../../services/agenceService';\r\n \r\n @Component({\r\n   selector: 'app-user-form',\r\n   templateUrl: './user-form.component.html',\r\n@@ -86,9 +87,9 @@\n           this.userService.getRoles().subscribe({\r\n             next: (roles) => {\r\n               const role = roles.find((r: any) => r.name === roleName);\r\n               if (role) {\r\n-                this.userService.assignRoleToUser(user.id, role).subscribe({\r\n+                this.ag.assignRoleToUser(user.id, role).subscribe({\r\n                   next: () => {\r\n                     this.isLoading = false;\r\n                     this.activeModal.close({ success: true });\r\n                   },\r\n"
                },
                {
                    "date": 1745313499548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n+    console\r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n@@ -87,9 +88,9 @@\n           this.userService.getRoles().subscribe({\r\n             next: (roles) => {\r\n               const role = roles.find((r: any) => r.name === roleName);\r\n               if (role) {\r\n-                this.ag.assignRoleToUser(user.id, role).subscribe({\r\n+                this.agenceService.assignRoleToUser(user.id, role).subscribe({\r\n                   next: () => {\r\n                     this.isLoading = false;\r\n                     this.activeModal.close({ success: true });\r\n                   },\r\n"
                },
                {
                    "date": 1745313508366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n-    console\r\n+    console.log()\r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n"
                },
                {
                    "date": 1745313519384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n-    console.log()\r\n+    console.log(\"user F\")\r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n"
                },
                {
                    "date": 1745313524961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,10 @@\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n-    console.log(\"user F\")\r\n+    console.log(\"user Form\",this.userForm.value)\r\n+    console.log(\"voici le token\",localStorage.getItem(\"token)\r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n"
                },
                {
                    "date": 1745313530610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     });\r\n   }\r\n   onSubmit(): void {\r\n     console.log(\"user Form\",this.userForm.value)\r\n-    console.log(\"voici le token\",localStorage.getItem(\"token)\r\n+   \r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n"
                },
                {
                    "date": 1745313535891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,10 @@\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n-    console.log(\"user Form\",this.userForm.value)\r\n+    console.log(\"user Form\",this.userForm.value);\r\n+    console.\r\n    \r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n"
                },
                {
                    "date": 1745313554009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,8 @@\n     });\r\n   }\r\n   onSubmit(): void {\r\n     console.log(\"user Form\",this.userForm.value);\r\n-    console.\r\n    \r\n     if (this.userForm.valid) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n"
                },
                {
                    "date": 1745313581710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n-  @Input() agencyId!: string;\r\n+  @Input() agenc!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private userService:UserService,\r\n"
                },
                {
                    "date": 1745313587487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export class UserFormComponent implements OnInit {\r\n   userForm: FormGroup;\r\n   roles: string[] = [];\r\n   isLoading = false;\r\n-  @Input() agenc!: string;\r\n+  @Input() agencyName!: string;\r\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private userService:UserService,\r\n"
                },
                {
                    "date": 1745313597422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         // Utilisez la nouvelle méthode du service\r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n-            this.agencyId // Supposant que agencyId est le nom du groupe\r\n+            this.agencyName // Supposant que agencyId est le nom du groupe\r\n         ).subscribe({\r\n             next: () => {\r\n                 this.isLoading = false;\r\n                 this.activeModal.close({ success: true });\r\n"
                },
                {
                    "date": 1745314568597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n-        console.log(\"les roles avant la récupération\",this.roles)\r\n+        \r\n         this.roles = roles.map((r: any) => r.name);\r\n         console.log(\"les roles apresssss la récupération\",this.roles)\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n"
                },
                {
                    "date": 1745314575098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,11 +34,9 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n-        \r\n-        this.roles = roles.map((r: any) => r.name);\r\n-        console.log(\"les roles apresssss la récupération\",this.roles)\r\n+                this.roles = roles.map((r: any) => r.name);\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n"
                },
                {
                    "date": 1745315044122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,17 +34,18 @@\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n-                this.roles = roles.map((r: any) => r.name);\r\n+        this.roles = roles.map((r: any) => r.name);\r\n       },\r\n       error: (err) => console.error('Failed to load roles', err)\r\n     });\r\n   }\r\n   onSubmit(): void {\r\n-    console.log(\"user Form\",this.userForm.value);\r\n-   \r\n-    if (this.userForm.valid) {\r\n+    console.log(\"Données du formulaire:\", this.userForm.value);\r\n+    console.log(\"Nom du groupe (agencyName):\", this.agencyName);\r\n+\r\n+    if (this.userForm.valid && this.agencyName) {\r\n         this.isLoading = true;\r\n         const formValue = this.userForm.value;\r\n \r\n         const userData = {\r\n@@ -54,27 +55,36 @@\n             credentials: [{\r\n                 type: 'password',\r\n                 value: formValue.password,\r\n                 temporary: false\r\n-            }]\r\n+            }],\r\n+            groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n-        // Utilisez la nouvelle méthode du service\r\n+        console.log('Envoi des données à Keycloak:', userData);\r\n+\r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n-            this.agencyName // Supposant que agencyId est le nom du groupe\r\n+            this.agencyName\r\n         ).subscribe({\r\n             next: () => {\r\n+                console.log('Utilisateur créé avec succès avec rôle et groupe');\r\n                 this.isLoading = false;\r\n                 this.activeModal.close({ success: true });\r\n             },\r\n             error: (err) => {\r\n-                console.error('Erreur lors de la création', err);\r\n+                console.error('Erreur complète:', err);\r\n                 this.isLoading = false;\r\n                 // Afficher un message d'erreur à l'utilisateur\r\n+                alert(`Erreur: ${err.message || 'Échec de la création'}`);\r\n             }\r\n         });\r\n+    } else {\r\n+        console.error('Formulaire invalide ou nom de groupe manquant');\r\n+        if (!this.agencyName) {\r\n+            console.error('agencyName est undefined');\r\n+        }\r\n     }\r\n }\r\n \r\n   private assignRoleToUser(username: string, roleName: string): void {\r\n"
                },
                {
                    "date": 1745316634012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n \r\n   ngOnInit(): void {\r\n     console.log(\"voici le token\",localStorage.getItem(\"token\"))\r\n     this.loadRoles();\r\n+    this.agency.name\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n"
                },
                {
                    "date": 1745316641078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \r\n   ngOnInit(): void {\r\n     console.log(\"voici le token\",localStorage.getItem(\"token\"))\r\n     this.loadRoles();\r\n-    this.agency.name\r\n+    console.log()\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n"
                },
                {
                    "date": 1745316649276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \r\n   ngOnInit(): void {\r\n     console.log(\"voici le token\",localStorage.getItem(\"token\"))\r\n     this.loadRoles();\r\n-    console.log()\r\n+    console.log(\"agencyName:\", this.agencyName);\r\n   }\r\n   loadRoles(): void {\r\n     this.userService.getRoles().subscribe({\r\n       next: (roles) => {\r\n"
                },
                {
                    "date": 1745316806919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    console.log(\"voici le token\",localStorage.getItem(\"token\"))\r\n+    console.log(\"voici le token\",localStorage.getItem(\"token\")\r\n     this.loadRoles();\r\n     console.log(\"agencyName:\", this.agencyName);\r\n   }\r\n   loadRoles(): void {\r\n"
                },
                {
                    "date": 1745317972413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     });\r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    console.log(\"voici le token\",localStorage.getItem(\"token\")\r\n+    \r\n     this.loadRoles();\r\n     console.log(\"agencyName:\", this.agencyName);\r\n   }\r\n   loadRoles(): void {\r\n@@ -61,9 +61,9 @@\n             groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n         console.log('Envoi des données à Keycloak:', userData);\r\n-\r\n+        \r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n             this.agencyName\r\n"
                },
                {
                    "date": 1745317980384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n         console.log('Envoi des données à Keycloak:', userData);\r\n-        \r\n+        console.log\r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n             this.agencyName\r\n"
                },
                {
                    "date": 1745317986250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n         console.log('Envoi des données à Keycloak:', userData);\r\n-        console.log\r\n+        console.log('le role choisi')\r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n             this.agencyName\r\n"
                },
                {
                    "date": 1745317994993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n         console.log('Envoi des données à Keycloak:', userData);\r\n-        console.log('le role choisi')\r\n+        console.log('le role choisi',formValue.role)\r\n         this.agenceService.createUserWithRoleAndGroup(\r\n             userData, \r\n             formValue.role,\r\n             this.agencyName\r\n"
                },
                {
                    "date": 1745361303909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,40 +87,9 @@\n         }\r\n     }\r\n }\r\n \r\n-  private assignRoleToUser(username: string, roleName: string): void {\r\n-    // D'abord, trouver l'ID de l'utilisateur\r\n-    this.userService.getUsers().subscribe({\r\n-      next: (users) => {\r\n-        const user = users.find((u: any) => u.username === username);\r\n-        if (user) {\r\n-          // Ensuite, trouver le rôle\r\n-          this.userService.getRoles().subscribe({\r\n-            next: (roles) => {\r\n-              const role = roles.find((r: any) => r.name === roleName);\r\n-              if (role) {\r\n-                this.agenceService.assignRoleToUser(user.id, role).subscribe({\r\n-                  next: () => {\r\n-                    this.isLoading = false;\r\n-                    this.activeModal.close({ success: true });\r\n-                  },\r\n-                  error: (err) => {\r\n-                    console.error('Failed to assign role', err);\r\n-                    this.isLoading = false;\r\n-                  }\r\n-                });\r\n-              }\r\n-            }\r\n-          });\r\n-        }\r\n-      },\r\n-      error: (err) => {\r\n-        console.error('Failed to find user', err);\r\n-        this.isLoading = false;\r\n-      }\r\n-    });\r\n-  }\r\n+ \r\n \r\n   onCancel(): void {\r\n     this.activeModal.dismiss();\r\n   }\r\n"
                },
                {
                    "date": 1749378558798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n             enabled: true,\r\n             credentials: [{\r\n                 type: 'password',\r\n                 value: formValue.password,\r\n-                temporary: false\r\n+                temporary: true\r\n             }],\r\n             groups: [this.agencyName] // Ajout direct du groupe dans la création\r\n         };\r\n \r\n@@ -87,10 +87,8 @@\n         }\r\n     }\r\n }\r\n \r\n- \r\n-\r\n   onCancel(): void {\r\n     this.activeModal.dismiss();\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1749379294617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,10 @@\n   constructor(\r\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private userService:UserService,\r\n-    private agenceService:AgenceService\r\n+    private agenceService:AgenceService,\r\n+    private \r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       username: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1749379300580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     public activeModal: NgbActiveModal, // Injectez NgbActiveModal\r\n     private fb: FormBuilder,\r\n     private userService:UserService,\r\n     private agenceService:AgenceService,\r\n-    private gmail\r\n+    private gmailService:GmailService\r\n   ) {\r\n     this.userForm = this.fb.group({\r\n       username: ['', Validators.required],\r\n       email: ['', [Validators.required, Validators.email]],\r\n"
                },
                {
                    "date": 1749384314838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n             `Vous êtes maintenant membre de notre application. Vous pouvez y accéder en suivant ce lien : [URL_DE_VOTRE_APPLICATION]\\n\\n` +\r\n             `Note importante : Lors de votre première connexion, vous devrez définir un nouveau mot de passe.\\n\\n` +\r\n             `Cordialement,\\nL'équipe ArchiManage`\r\n     };\r\n-    console\r\n+    console.\r\n     this.gmailService.sendSystemEmail(emailData).subscribe({\r\n       next: () => console.log('Email de bienvenue envoyé avec succès'),\r\n       error: (err) => console.error('Erreur lors de l\\'envoi de l\\'email', err)\r\n     });\r\n"
                }
            ],
            "date": 1744030117160,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrl: './user-form.component.scss'\r\n})\r\nexport class UserFormComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  roles = ['Admin', 'Agent', 'Manager'];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<UserFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.userForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      role: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.dialogRef.close(this.userForm.value);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n}\r\n"
        }
    ]
}