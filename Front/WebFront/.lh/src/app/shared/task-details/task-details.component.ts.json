{
    "sourceFile": "src/app/shared/task-details/task-details.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 30,
            "patches": [
                {
                    "date": 1744726808515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744730337474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component } from '@angular/core';\r\n+import { Component, Input } from '@angular/core';\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n"
                },
                {
                    "date": 1744730353361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,101 +8,5 @@\n export class TaskDetailsComponent {\r\n   @Input() task: any;\r\n   @Input() phaseName: string = '';\r\n   \r\n-  comments: Comment[] = [];\r\n-  mediaFiles: MediaFile[] = [];\r\n-  taskHistory: TaskHistory[] = [];\r\n-  newComment: string = '';\r\n-\r\n-  constructor(\r\n-    public activeModal: NgbActiveModal,\r\n-    private taskService: TaskService\r\n-  ) {}\r\n-\r\n-  ngOnInit(): void {\r\n-    this.loadTaskDetails();\r\n-  }\r\n-\r\n-  loadTaskDetails(): void {\r\n-    // Charger les commentaires\r\n-    this.taskService.getComments(this.task._id).subscribe(comments => {\r\n-      this.comments = comments;\r\n-    });\r\n-\r\n-    // Charger les médias\r\n-    this.taskService.getMediaFiles(this.task._id).subscribe(media => {\r\n-      this.mediaFiles = media;\r\n-    });\r\n-\r\n-    // Charger l'historique\r\n-    this.taskService.getTaskHistory(this.task._id).subscribe(history => {\r\n-      this.taskHistory = history;\r\n-    });\r\n-  }\r\n-\r\n-  addComment(): void {\r\n-    if (this.newComment.trim()) {\r\n-      const comment: Comment = {\r\n-        text: this.newComment,\r\n-        user: { name: 'Utilisateur actuel', avatar: 'assets/images/user.png' },\r\n-        date: new Date()\r\n-      };\r\n-\r\n-      this.taskService.addComment(this.task._id, comment).subscribe(() => {\r\n-        this.comments.push(comment);\r\n-        this.newComment = '';\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  handleFileInput(event: any): void {\r\n-    const files = event.target.files;\r\n-    for (let file of files) {\r\n-      const reader = new FileReader();\r\n-      reader.onload = (e: any) => {\r\n-        const media: MediaFile = {\r\n-          url: e.target.result,\r\n-          type: file.type.includes('image') ? 'image' : 'video',\r\n-          name: file.name\r\n-        };\r\n-        this.taskService.addMedia(this.task._id, media).subscribe(() => {\r\n-          this.mediaFiles.push(media);\r\n-        });\r\n-      };\r\n-      reader.readAsDataURL(file);\r\n-    }\r\n-  }\r\n-\r\n-  deleteMedia(media: MediaFile): void {\r\n-    this.taskService.deleteMedia(this.task._id, media).subscribe(() => {\r\n-      this.mediaFiles = this.mediaFiles.filter(m => m.url !== media.url);\r\n-    });\r\n-  }\r\n-\r\n-  updateStatus(): void {\r\n-    this.taskService.updateTaskStatus(this.task._id, this.task.status).subscribe(() => {\r\n-      this.addHistoryEntry(`Statut changé à ${this.task.status}`);\r\n-    });\r\n-  }\r\n-\r\n-  updatePriority(): void {\r\n-    this.taskService.updateTaskPriority(this.task._id, this.task.priority).subscribe(() => {\r\n-      this.addHistoryEntry(`Priorité changée à ${this.task.priority}`);\r\n-    });\r\n-  }\r\n-\r\n-  addHistoryEntry(action: string): void {\r\n-    const historyEntry: TaskHistory = {\r\n-      user: { name: 'Utilisateur actuel' },\r\n-      action: action,\r\n-      date: new Date()\r\n-    };\r\n-    this.taskHistory.unshift(historyEntry);\r\n-  }\r\n-\r\n-  saveChanges(): void {\r\n-    this.taskService.updateTask(this.task._id, this.task).subscribe(() => {\r\n-      this.activeModal.close(this.task);\r\n-    });\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1746377070000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,76 @@\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n   styleUrl: './task-details.component.scss'\r\n })\r\n-export class TaskDetailsComponent {\r\n-  @Input() task: any;\r\n-  @Input() phaseName: string = '';\r\n+export class TaskDetailsComponent implements OnInit {\r\n+  task: Task;\r\n+\r\n+  constructor(\r\n+    public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n+    @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n+  ) {\r\n+    this.task = data.task;\r\n+  }\r\n+\r\n+  ngOnInit(): void {\r\n+    // If no subtasks, initialize empty array\r\n+    if (!this.task.subtasks) {\r\n+      this.task.subtasks = [];\r\n+    }\r\n+    \r\n+    // If no attachments, initialize empty array\r\n+    if (!this.task.attachments) {\r\n+      this.task.attachments = [];\r\n+    }\r\n+    \r\n+    // If no activities, initialize empty array\r\n+    if (!this.task.activities) {\r\n+      this.task.activities = [];\r\n+    }\r\n+  }\r\n+\r\n+  closeModal(): void {\r\n+    this.dialogRef.close();\r\n+  }\r\n+\r\n+  // Sample data structure for reference\r\n+  getSampleTask(): Task {\r\n+    return {\r\n+      id: '1',\r\n+      name: 'Innovate Ltd. Corporate Website Design',\r\n+      description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n+      priority: 'HIGH',\r\n+      startDate: new Date('2028-06-01'),\r\n+      endDate: new Date('2028-09-30'),\r\n+      progress: 85,\r\n+      subtasks: [\r\n+        { name: 'Develop Initial Wireframes', assignee: 'Eric Green' },\r\n+        { name: 'Homepage UI', assignee: 'Brian Adams' },\r\n+        { name: 'Design Inner Pages UI', assignee: 'Brian Adams' },\r\n+        { name: 'Client Feedback Integration', assignee: 'Eric Green' }\r\n+      ],\r\n+      attachments: [\r\n+        { name: 'Innovate.Ltd_Homepage_UI.fig', description: 'Final homepage UI in Figma' },\r\n+        { name: 'Innovate.Ltd_InnerPages.pdf', description: 'Approved layouts for inner pages' },\r\n+        { name: 'Innovate.Ltd_Design_Guidelines.pdf', description: 'Design guidelines for the project' }\r\n+      ],\r\n+      requirements: [\r\n+        'Brand Consistency: Ensure the UI elements align with Innovate Ltd\\'s branding',\r\n+        'Responsive Design: The UI kit must be designed for optimal performance on all devices',\r\n+        'User Experience: Focus on creating an intuitive and engaging user experience',\r\n+        'Design Variations: Provide multiple design variations for key pages'\r\n+      ],\r\n+      guidelines: [\r\n+        'Adhere to the wireframes and initial design concepts approved by the client',\r\n+        'Implement feedback from the client and stakeholders in a timely manner',\r\n+        'Ensure all design elements are scalable and adaptable to future updates'\r\n+      ],\r\n+      activities: [\r\n+        { user: 'Eric Green', timestamp: new Date(), content: 'Initial wireframes are completed and ready for review.', hasReply: true },\r\n+        { user: 'Brian Adams', timestamp: new Date(), content: 'Homepage UI design has been finalized and uploaded. Awaiting feedback.', hasReply: false },\r\n+        { user: 'Eric Green', timestamp: new Date(), content: 'Client feedback has been integrated. Please review the changes.', hasReply: true }\r\n+      ]\r\n+    };\r\n+  }\r\n   \r\n }\r\n"
                },
                {
                    "date": 1746377078032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component, Input } from '@angular/core';\r\n+import { Component, Input, OnInit } from '@angular/core';\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n"
                },
                {
                    "date": 1746377084971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { Component, Input, OnInit } from '@angular/core';\r\n+import { Task } from '../../models/task.model';\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n@@ -8,9 +9,9 @@\n export class TaskDetailsComponent implements OnInit {\r\n   task: Task;\r\n \r\n   constructor(\r\n-    public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n+    public dialogRef: MatDialogRef <TaskDetailsComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n   ) {\r\n     this.task = data.task;\r\n   }\r\n"
                },
                {
                    "date": 1746377092647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n-import { Component, Input, OnInit } from '@angular/core';\r\n+import { Component, Inject, Input, OnInit } from '@angular/core';\r\n import { Task } from '../../models/task.model';\r\n+import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n@@ -9,9 +10,9 @@\n export class TaskDetailsComponent implements OnInit {\r\n   task: Task;\r\n \r\n   constructor(\r\n-    public dialogRef: MatDialogRef <TaskDetailsComponent>,\r\n+    public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n   ) {\r\n     this.task = data.task;\r\n   }\r\n"
                },
                {
                    "date": 1746377135287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: 'HIGH',\r\n+      \r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377143915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      \r\n+      priority: 'HIGH',\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377170273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: 'HIGH',\r\n+      priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377203336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n+      priority: 'priority', // Assuming 'HIGH' is a valid TaskPriority\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377209871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: 'priority', // Assuming 'HIGH' is a valid TaskPriority\r\n+      priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377231657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n+      priority: '', // Assuming 'HIGH' is a valid TaskPriority\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377246836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,43 +39,8 @@\n   }\r\n \r\n   // Sample data structure for reference\r\n   getSampleTask(): Task {\r\n-    return {\r\n-      id: '1',\r\n-      name: 'Innovate Ltd. Corporate Website Design',\r\n-      description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: '', // Assuming 'HIGH' is a valid TaskPriority\r\n-      startDate: new Date('2028-06-01'),\r\n-      endDate: new Date('2028-09-30'),\r\n-      progress: 85,\r\n-      subtasks: [\r\n-        { name: 'Develop Initial Wireframes', assignee: 'Eric Green' },\r\n-        { name: 'Homepage UI', assignee: 'Brian Adams' },\r\n-        { name: 'Design Inner Pages UI', assignee: 'Brian Adams' },\r\n-        { name: 'Client Feedback Integration', assignee: 'Eric Green' }\r\n-      ],\r\n-      attachments: [\r\n-        { name: 'Innovate.Ltd_Homepage_UI.fig', description: 'Final homepage UI in Figma' },\r\n-        { name: 'Innovate.Ltd_InnerPages.pdf', description: 'Approved layouts for inner pages' },\r\n-        { name: 'Innovate.Ltd_Design_Guidelines.pdf', description: 'Design guidelines for the project' }\r\n-      ],\r\n-      requirements: [\r\n-        'Brand Consistency: Ensure the UI elements align with Innovate Ltd\\'s branding',\r\n-        'Responsive Design: The UI kit must be designed for optimal performance on all devices',\r\n-        'User Experience: Focus on creating an intuitive and engaging user experience',\r\n-        'Design Variations: Provide multiple design variations for key pages'\r\n-      ],\r\n-      guidelines: [\r\n-        'Adhere to the wireframes and initial design concepts approved by the client',\r\n-        'Implement feedback from the client and stakeholders in a timely manner',\r\n-        'Ensure all design elements are scalable and adaptable to future updates'\r\n-      ],\r\n-      activities: [\r\n-        { user: 'Eric Green', timestamp: new Date(), content: 'Initial wireframes are completed and ready for review.', hasReply: true },\r\n-        { user: 'Brian Adams', timestamp: new Date(), content: 'Homepage UI design has been finalized and uploaded. Awaiting feedback.', hasReply: false },\r\n-        { user: 'Eric Green', timestamp: new Date(), content: 'Client feedback has been integrated. Please review the changes.', hasReply: true }\r\n-      ]\r\n-    };\r\n+    \r\n   }\r\n   \r\n }\r\n"
                },
                {
                    "date": 1746377253342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,44 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   // Sample data structure for reference\r\n-  getSampleTask(): Task {\r\n-    \r\n+  getSampleTask():  {\r\n+    return {\r\n+      id: '1',\r\n+      name: 'Innovate Ltd. Corporate Website Design',\r\n+      description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n+      priority: , // Assuming 'HIGH' is a valid TaskPriority\r\n+      startDate: new Date('2028-06-01'),\r\n+      endDate: new Date('2028-09-30'),\r\n+      progress: 85,\r\n+      subtasks: [\r\n+        { name: 'Develop Initial Wireframes', assignee: 'Eric Green' },\r\n+        { name: 'Homepage UI', assignee: 'Brian Adams' },\r\n+        { name: 'Design Inner Pages UI', assignee: 'Brian Adams' },\r\n+        { name: 'Client Feedback Integration', assignee: 'Eric Green' }\r\n+      ],\r\n+      attachments: [\r\n+        { name: 'Innovate.Ltd_Homepage_UI.fig', description: 'Final homepage UI in Figma' },\r\n+        { name: 'Innovate.Ltd_InnerPages.pdf', description: 'Approved layouts for inner pages' },\r\n+        { name: 'Innovate.Ltd_Design_Guidelines.pdf', description: 'Design guidelines for the project' }\r\n+      ],\r\n+      requirements: [\r\n+        'Brand Consistency: Ensure the UI elements align with Innovate Ltd\\'s branding',\r\n+        'Responsive Design: The UI kit must be designed for optimal performance on all devices',\r\n+        'User Experience: Focus on creating an intuitive and engaging user experience',\r\n+        'Design Variations: Provide multiple design variations for key pages'\r\n+      ],\r\n+      guidelines: [\r\n+        'Adhere to the wireframes and initial design concepts approved by the client',\r\n+        'Implement feedback from the client and stakeholders in a timely manner',\r\n+        'Ensure all design elements are scalable and adaptable to future updates'\r\n+      ],\r\n+      activities: [\r\n+        { user: 'Eric Green', timestamp: new Date(), content: 'Initial wireframes are completed and ready for review.', hasReply: true },\r\n+        { user: 'Brian Adams', timestamp: new Date(), content: 'Homepage UI design has been finalized and uploaded. Awaiting feedback.', hasReply: false },\r\n+        { user: 'Eric Green', timestamp: new Date(), content: 'Client feedback has been integrated. Please review the changes.', hasReply: true }\r\n+      ]\r\n+    };\r\n   }\r\n   \r\n }\r\n"
                },
                {
                    "date": 1746377259086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   // Sample data structure for reference\r\n-  getSampleTask():  {\r\n+  getSampleTask() {\r\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n"
                },
                {
                    "date": 1746377265546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,14 +38,14 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   // Sample data structure for reference\r\n-  getSampleTask() {\r\n+  getSampleTask(): Task {\r\n     return {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n-      priority: , // Assuming 'HIGH' is a valid TaskPriority\r\n+      priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n       startDate: new Date('2028-06-01'),\r\n       endDate: new Date('2028-09-30'),\r\n       progress: 85,\r\n       subtasks: [\r\n"
                },
                {
                    "date": 1746377330591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,10 @@\n     this.dialogRef.close();\r\n   }\r\n \r\n   // Sample data structure for reference\r\n-  getSampleTask(): Task {\r\n-    return {\r\n+  getSampleTask() {\r\n+    this.task= {\r\n       id: '1',\r\n       name: 'Innovate Ltd. Corporate Website Design',\r\n       description: 'The goal of this project is to design a comprehensive and modern UI kit for Innovate Ltd\\'s corporate website...',\r\n       priority: 'HIGH', // Assuming 'HIGH' is a valid TaskPriority\r\n"
                },
                {
                    "date": 1746377339187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   templateUrl: './task-details.component.html',\r\n   styleUrl: './task-details.component.scss'\r\n })\r\n export class TaskDetailsComponent implements OnInit {\r\n-  task: Task;\r\n+  task: any;\r\n \r\n   constructor(\r\n     public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n"
                },
                {
                    "date": 1746377985121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import { Component, Inject, Input, OnInit } from '@angular/core';\r\n import { Task } from '../../models/task.model';\r\n-import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n"
                },
                {
                    "date": 1746377992783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Component, Inject, Input, OnInit } from '@angular/core';\r\n import { Task } from '../../models/task.model';\r\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'; // Importé pour contrôler le modal Ngb\r\n \r\n @Component({\r\n   selector: 'app-task-details',\r\n   templateUrl: './task-details.component.html',\r\n"
                },
                {
                    "date": 1746378003511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   templateUrl: './task-details.component.html',\r\n   styleUrl: './task-details.component.scss'\r\n })\r\n export class TaskDetailsComponent implements OnInit {\r\n-  task: any;\r\n+  @Input() task: any;\r\n \r\n   constructor(\r\n     public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n"
                },
                {
                    "date": 1746378016892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,9 @@\n export class TaskDetailsComponent implements OnInit {\r\n   @Input() task: any;\r\n \r\n   constructor(\r\n-    public dialogRef: MatDialogRef<TaskDetailsComponent>,\r\n-    @Inject(MAT_DIALOG_DATA) public data: { task: Task }\r\n+    public activeModal: NgbActiveModal\r\n   ) {\r\n     this.task = data.task;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1746378030700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n   constructor(\r\n     public activeModal: NgbActiveModal\r\n   ) {\r\n-    this.task = data.task;\r\n+    \r\n   }\r\n \r\n   ngOnInit(): void {\r\n     // If no subtasks, initialize empty array\r\n"
                },
                {
                    "date": 1746378061056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     }\r\n   }\r\n \r\n   closeModal(): void {\r\n-    this.dialogRef.close();\r\n+    this.activeModal.close();\r\n   }\r\n \r\n   // Sample data structure for reference\r\n   getSampleTask() {\r\n"
                },
                {
                    "date": 1746378415631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     \r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    // If no subtasks, initialize empty array\r\n+    this.\r\n     if (!this.task.subtasks) {\r\n       this.task.subtasks = [];\r\n     }\r\n     \r\n"
                },
                {
                    "date": 1746378498425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,10 @@\n     \r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    this.\r\n+    console\r\n+    this.getSampleTask();\r\n     if (!this.task.subtasks) {\r\n       this.task.subtasks = [];\r\n     }\r\n     \r\n"
                },
                {
                    "date": 1746378503828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     \r\n   }\r\n \r\n   ngOnInit(): void {\r\n-    console\r\n+    console.log('Task details:', this.task);  \r\n     this.getSampleTask();\r\n     if (!this.task.subtasks) {\r\n       this.task.subtasks = [];\r\n     }\r\n"
                },
                {
                    "date": 1746378699683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   }\r\n \r\n   ngOnInit(): void {\r\n     console.log('Task details:', this.task);  \r\n-    this.getSampleTask();\r\n+    //this.getSampleTask();\r\n     if (!this.task.subtasks) {\r\n       this.task.subtasks = [];\r\n     }\r\n     \r\n"
                },
                {
                    "date": 1746385275692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   styleUrl: './task-details.component.scss'\r\n })\r\n export class TaskDetailsComponent implements OnInit {\r\n   @Input() task: any;\r\n-eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJOSzA0N0N4LU9vUEFldTRDdlhmOFFQVEhXQzRKLVJXOGVrUzRQd25sUGFVIn0.eyJleHAiOjE3NDYzODU0NjAsImlhdCI6MTc0NjM4NTE2MCwianRpIjoiYzFlNTYyZGYtMmNmNi00YWIzLWI1NTgtOTJkOWQzZTg3ZDY4IiwiaXNzIjoiaHR0cHM6Ly9lc21tLnN5c3Rlby50bi9yZWFsbXMvc3lzdGVvZGlnaXRhbCIsImF1ZCI6WyJhcHAtcHJvamVjdFBGRSIsInJlYWxtLW1hbmFnZW1lbnQiLCJicm9rZXIiLCJhY2NvdW50Il0sInN1YiI6IjJkMzk0MDM4LTlkY2ItNGQyMS1hNzFlLTk3YWFmNzEyMmY0NCIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwcC1wcm9qZWN0UEZFIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyIiLCJodHRwOi8vbG9jYWxob3N0OjQyMDAvKiIsImh0dHBzOi8vZTEuc3lzdGVvLnRuIiwiaHR0cDovL2xvY2FsaG9zdDo0MjAwIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLXN5c3Rlb2RpZ2l0YWwiLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicmVhbG0tbWFuYWdlbWVudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLCJpbXBlcnNvbmF0aW9uIiwiY3JlYXRlLWNsaWVudCIsInZpZXctYXBwbGljYXRpb25zIiwibWFuYWdlLXVzZXJzIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInJlYWQtdG9rZW4iLCJ2aWV3LWNvbnNlbnQiLCJ2aWV3LWdyb3VwcyIsInZpZXctdXNlcnMiLCJtYW5hZ2UtYXV0aG9yaXphdGlvbiIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwiZGVsZXRlLWFjY291bnQiLCJtYW5hZ2UtY29uc2VudCIsIm1hbmFnZS1jbGllbnRzIiwidmlldy1wcm9maWxlIiwicXVlcnktZ3JvdXBzIl19LCJhcHAtcHJvamVjdFBGRSI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLCJpbXBlcnNvbmF0aW9uIiwiY3JlYXRlLWNsaWVudCIsInZpZXctYXBwbGljYXRpb25zIiwibWFuYWdlLXVzZXJzIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInJlYWQtdG9rZW4iLCJ2aWV3LWNvbnNlbnQiLCJ2aWV3LWdyb3VwcyIsInZpZXctdXNlcnMiLCJtYW5hZ2UtYXV0aG9yaXphdGlvbiIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwiZGVsZXRlLWFjY291bnQiLCJtYW5hZ2UtY29uc2VudCIsIm1hbmFnZS1jbGllbnRzIiwidmlldy1wcm9maWxlIiwicXVlcnktZ3JvdXBzIl19fSwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwiY2xpZW50SG9zdCI6IjEwMi4xNTMuMTU4LjUyIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzZXJ2aWNlLWFjY291bnQtYXBwLXByb2plY3RwZmUiLCJjbGllbnRBZGRyZXNzIjoiMTAyLjE1My4xNTguNTIiLCJjbGllbnRfaWQiOiJhcHAtcHJvamVjdFBGRSJ9.EM7p0zQzB_kA3o8uESVELY9HueW6iDDZvWdBSsPYlVJ6xwBcYAVRucq6R--DgccYWdzBQDjZUve1GQHu4gzg2hKqlo2OdcoVNYw78q2zMFW5YefLUHzEbYr5_wAc4X1D-Df8IYtRixhynRDRrSMUTQqEWLyY8Q1ifPAzvk7ERCUoPajjaZuejH_9cRTpCo-svEQJ-ddrUkSi3P1Mxo2V4U05Hta9wXeIXNnfPntLATRwuv3RFN6ujByH3NO1-s5_HQhQSZqrYlvUuMEu9mr8fNU5dyFEHg_3otqHTX4_dSJASSX2oN_QZ_hUf2PHOFTCo6OTP2uhN8ljQ0euF-RzDQ\r\n+\r\n   constructor(\r\n     public activeModal: NgbActiveModal\r\n   ) {\r\n     \r\n"
                },
                {
                    "date": 1746385370189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   styleUrl: './task-details.component.scss'\r\n })\r\n export class TaskDetailsComponent implements OnInit {\r\n   @Input() task: any;\r\n-  sub\r\n+  subtask\r\n   constructor(\r\n     public activeModal: NgbActiveModal\r\n   ) {\r\n     \r\n"
                }
            ],
            "date": 1744726808515,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.component.html',\r\n  styleUrl: './task-details.component.scss'\r\n})\r\nexport class TaskDetailsComponent {\r\n  @Input() task: any;\r\n  @Input() phaseName: string = '';\r\n  \r\n  comments: Comment[] = [];\r\n  mediaFiles: MediaFile[] = [];\r\n  taskHistory: TaskHistory[] = [];\r\n  newComment: string = '';\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private taskService: TaskService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadTaskDetails();\r\n  }\r\n\r\n  loadTaskDetails(): void {\r\n    // Charger les commentaires\r\n    this.taskService.getComments(this.task._id).subscribe(comments => {\r\n      this.comments = comments;\r\n    });\r\n\r\n    // Charger les médias\r\n    this.taskService.getMediaFiles(this.task._id).subscribe(media => {\r\n      this.mediaFiles = media;\r\n    });\r\n\r\n    // Charger l'historique\r\n    this.taskService.getTaskHistory(this.task._id).subscribe(history => {\r\n      this.taskHistory = history;\r\n    });\r\n  }\r\n\r\n  addComment(): void {\r\n    if (this.newComment.trim()) {\r\n      const comment: Comment = {\r\n        text: this.newComment,\r\n        user: { name: 'Utilisateur actuel', avatar: 'assets/images/user.png' },\r\n        date: new Date()\r\n      };\r\n\r\n      this.taskService.addComment(this.task._id, comment).subscribe(() => {\r\n        this.comments.push(comment);\r\n        this.newComment = '';\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFileInput(event: any): void {\r\n    const files = event.target.files;\r\n    for (let file of files) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        const media: MediaFile = {\r\n          url: e.target.result,\r\n          type: file.type.includes('image') ? 'image' : 'video',\r\n          name: file.name\r\n        };\r\n        this.taskService.addMedia(this.task._id, media).subscribe(() => {\r\n          this.mediaFiles.push(media);\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  deleteMedia(media: MediaFile): void {\r\n    this.taskService.deleteMedia(this.task._id, media).subscribe(() => {\r\n      this.mediaFiles = this.mediaFiles.filter(m => m.url !== media.url);\r\n    });\r\n  }\r\n\r\n  updateStatus(): void {\r\n    this.taskService.updateTaskStatus(this.task._id, this.task.status).subscribe(() => {\r\n      this.addHistoryEntry(`Statut changé à ${this.task.status}`);\r\n    });\r\n  }\r\n\r\n  updatePriority(): void {\r\n    this.taskService.updateTaskPriority(this.task._id, this.task.priority).subscribe(() => {\r\n      this.addHistoryEntry(`Priorité changée à ${this.task.priority}`);\r\n    });\r\n  }\r\n\r\n  addHistoryEntry(action: string): void {\r\n    const historyEntry: TaskHistory = {\r\n      user: { name: 'Utilisateur actuel' },\r\n      action: action,\r\n      date: new Date()\r\n    };\r\n    this.taskHistory.unshift(historyEntry);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.taskService.updateTask(this.task._id, this.task).subscribe(() => {\r\n      this.activeModal.close(this.task);\r\n    });\r\n  }\r\n}\r\n"
        }
    ]
}