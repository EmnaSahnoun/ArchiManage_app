{
    "sourceFile": "src/app/profile/profile.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1746446055235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749459972877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,68 @@\n   templateUrl: './profile.component.html',\r\n   styleUrl: './profile.component.scss',\r\n   standalone: false\r\n })\r\n-export class ProfileComponent {\r\n+export class ProfileComponentimplements OnInit {\r\n+  profileForm!: FormGroup;\r\n+  passwordForm!: FormGroup;\r\n+  currentUser!: UserProfile | null; // Utiliser l'interface\r\n \r\n-}\r\n+  constructor(private fb: FormBuilder /*, ... autres services */) {}\r\n+\r\n+  ngOnInit(): void {\r\n+    // Initialiser le formulaire de profil\r\n+    this.profileForm = this.fb.group({\r\n+      username: [{ value: '', disabled: true }, Validators.required], // Souvent, le username n'est pas modifiable\r\n+      firstName: ['', Validators.required],\r\n+      lastName: ['', Validators.required],\r\n+      email: ['', [Validators.required, Validators.email]]\r\n+    });\r\n+\r\n+    // Initialiser le formulaire de changement de mot de passe\r\n+    this.passwordForm = this.fb.group({\r\n+      currentPassword: ['', Validators.required],\r\n+      newPassword: ['', [Validators.required, Validators.minLength(6)]], // Ajoutez vos validateurs\r\n+      confirmNewPassword: ['', Validators.required]\r\n+    }, { validator: this.passwordsMatchValidator }); // Validateur personnalisé pour vérifier que les nouveaux MDP correspondent\r\n+\r\n+    this.loadUserProfile();\r\n+  }\r\n+\r\n+  loadUserProfile(): void {\r\n+    // Logique pour charger les données de l'utilisateur (ex: via un service)\r\n+    // et les patcher dans this.profileForm et this.currentUser\r\n+    // Exemple :\r\n+    // this.userService.getCurrentUserProfile().subscribe(profile => {\r\n+    //   this.currentUser = profile;\r\n+    //   this.profileForm.patchValue(profile);\r\n+    // });\r\n+  }\r\n+\r\n+  onProfileSubmit(): void {\r\n+    if (this.profileForm.valid && this.currentUser) {\r\n+      const updatedProfile: UserProfile = {\r\n+        ...this.currentUser, // Garde l'ID et autres champs non modifiables\r\n+        ...this.profileForm.value\r\n+      };\r\n+      // Logique pour appeler le service de mise à jour du profil\r\n+      // this.userService.updateProfile(updatedProfile).subscribe(...);\r\n+      console.log('Profil à mettre à jour:', updatedProfile);\r\n+    }\r\n+  }\r\n+\r\n+  onPasswordSubmit(): void {\r\n+    if (this.passwordForm.valid) {\r\n+      const passwordRequest: ChangePasswordRequest = this.passwordForm.value;\r\n+      // Logique pour appeler le service de changement de mot de passe\r\n+      // this.authService.changePassword(passwordRequest).subscribe(...);\r\n+      console.log('Demande de changement de mot de passe:', passwordRequest);\r\n+      this.passwordForm.reset();\r\n+    }\r\n+  }\r\n+\r\n+  passwordsMatchValidator(form: FormGroup) {\r\n+    const newPassword = form.get('newPassword')?.value;\r\n+    const confirmNewPassword = form.get('confirmNewPassword')?.value;\r\n+    return newPassword === confirmNewPassword ? null : { mismatch: true };\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749459987307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,13 @@\n   templateUrl: './profile.component.html',\r\n   styleUrl: './profile.component.scss',\r\n   standalone: false\r\n })\r\n-export class ProfileComponentimplements OnInit {\r\n+export class ProfileComponentimplements ngOnInit(): void {\r\n+  //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n+  //Add 'implements OnInit' to the class.\r\n+  \r\n+} {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: UserProfile | null; // Utiliser l'interface\r\n \r\n"
                },
                {
                    "date": 1749459993039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,9 @@\n   templateUrl: './profile.component.html',\r\n   styleUrl: './profile.component.scss',\r\n   standalone: false\r\n })\r\n-export class ProfileComponentimplements ngOnInit(): void {\r\n-  //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n-  //Add 'implements OnInit' to the class.\r\n-  \r\n-} {\r\n+export class ProfileComponentimplements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: UserProfile | null; // Utiliser l'interface\r\n \r\n"
                },
                {
                    "date": 1749459998391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import { Component } from '@angular/core';\r\n+import { Component, OnInit } from '@angular/core';\r\n \r\n @Component({\r\n   selector: 'app-profile',\r\n   templateUrl: './profile.component.html',\r\n   styleUrl: './profile.component.scss',\r\n   standalone: false\r\n })\r\n-export class ProfileComponentimplements OnInit {\r\n+export class ProfileComponent implements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: UserProfile | null; // Utiliser l'interface\r\n \r\n"
                },
                {
                    "date": 1749460006108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { Component, OnInit } from '@angular/core';\r\n+import { FormGroup } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'app-profile',\r\n   templateUrl: './profile.component.html',\r\n@@ -8,9 +9,9 @@\n })\r\n export class ProfileComponent implements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n-  currentUser!: UserProfile | null; // Utiliser l'interface\r\n+  currentUser!: UserPranyofile | null; // Utiliser l'interface\r\n \r\n   constructor(private fb: FormBuilder /*, ... autres services */) {}\r\n \r\n   ngOnInit(): void {\r\n"
                },
                {
                    "date": 1749460016632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n })\r\n export class ProfileComponent implements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n-  currentUser!: UserPranyofile | null; // Utiliser l'interface\r\n+  currentUser!: any | null; \r\n \r\n-  constructor(private fb: FormBuilder /*, ... autres services */) {}\r\n+  constructor(private fb: FormBuilder) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749460022920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Component, OnInit } from '@angular/core';\r\n-import { FormGroup } from '@angular/forms';\r\n+import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'app-profile',\r\n   templateUrl: './profile.component.html',\r\n"
                },
                {
                    "date": 1749460028175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n   }\r\n \r\n   onProfileSubmit(): void {\r\n     if (this.profileForm.valid && this.currentUser) {\r\n-      const updatedProfile: UserProfile = {\r\n+      const updatedProfile: any = {\r\n         ...this.currentUser, // Garde l'ID et autres champs non modifiables\r\n         ...this.profileForm.value\r\n       };\r\n       // Logique pour appeler le service de mise à jour du profil\r\n"
                },
                {
                    "date": 1749460034336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n   }\r\n \r\n   onPasswordSubmit(): void {\r\n     if (this.passwordForm.valid) {\r\n-      const passwordRequest: ChangePasswordRequest = this.passwordForm.value;\r\n+      const passwordRequest: any = this.passwordForm.value;\r\n       // Logique pour appeler le service de changement de mot de passe\r\n       // this.authService.changePassword(passwordRequest).subscribe(...);\r\n       console.log('Demande de changement de mot de passe:', passwordRequest);\r\n       this.passwordForm.reset();\r\n"
                },
                {
                    "date": 1749460096331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,15 +33,9 @@\n     this.loadUserProfile();\r\n   }\r\n \r\n   loadUserProfile(): void {\r\n-    // Logique pour charger les données de l'utilisateur (ex: via un service)\r\n-    // et les patcher dans this.profileForm et this.currentUser\r\n-    // Exemple :\r\n-    // this.userService.getCurrentUserProfile().subscribe(profile => {\r\n-    //   this.currentUser = profile;\r\n-    //   this.profileForm.patchValue(profile);\r\n-    // });\r\n+    \r\n   }\r\n \r\n   onProfileSubmit(): void {\r\n     if (this.profileForm.valid && this.currentUser) {\r\n"
                },
                {
                    "date": 1749462377915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: any | null; \r\n \r\n-  constructor(private fb: FormBuilder) {}\r\n+  constructor(private fb: FormBuilder,) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749462385200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: any | null; \r\n \r\n-  constructor(private fb: FormBuilder,) {}\r\n+  constructor(private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749462533431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import { Component, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n+import { AuthService } from '../services/auth.service';\r\n+import { UserService } from '../services/UserService';\r\n \r\n @Component({\r\n   selector: 'app-profile',\r\n   templateUrl: './profile.component.html',\r\n@@ -10,9 +12,10 @@\n export class ProfileComponent implements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: any | null; \r\n-\r\n+isLoading = false;\r\n+  isSaving = false;\r\n   constructor(private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n"
                },
                {
                    "date": 1749462584251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export class ProfileComponent implements OnInit {\r\n   profileForm!: FormGroup;\r\n   passwordForm!: FormGroup;\r\n   currentUser!: any | null; \r\n-isLoading = false;\r\n+  isLoading = false;\r\n   isSaving = false;\r\n   constructor(private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n \r\n   ngOnInit(): void {\r\n@@ -36,9 +36,44 @@\n     this.loadUserProfile();\r\n   }\r\n \r\n   loadUserProfile(): void {\r\n+    this.isLoading = true;\r\n+        const userId = localStorage.getItem('user_id');\r\n+        if (!userId) {\r\n+          this.snackBar.open('Impossible de récupérer l\\'identifiant utilisateur.', 'Fermer', { duration: 3000 });\r\n+          this.isLoading = false;\r\n+          return;\r\n+        }\r\n     \r\n+        this.agenceService.getAgenceByUser(userId).pipe(\r\n+          switchMap(groups => {\r\n+            if (!groups || groups.length === 0) {\r\n+              return throwError(() => new Error('L\\'utilisateur n\\'est assigné à aucune agence (groupe Keycloak).'));\r\n+            }\r\n+    \r\n+            const agenceGroup = groups[0];\r\n+            if (!agenceGroup || !agenceGroup.name) {\r\n+              return throwError(() => new Error('Nom de l\\'agence (groupe Keycloak) non trouvé.'));\r\n+            }\r\n+            return this.agenceService.getAgenceByName(agenceGroup.name);\r\n+          }),\r\n+          tap(agenceDetails => {\r\n+            if (agenceDetails) {\r\n+              this.currentAgence = agenceDetails;\r\n+              console.log('Détails de l\\'agence:', agenceDetails)\r\n+              this.agenceForm.patchValue(agenceDetails);\r\n+            } else {\r\n+              this.snackBar.open('Détails de l\\'agence non trouvés.', 'Fermer', { duration: 4000 });\r\n+            }\r\n+          }),\r\n+          catchError(err => {\r\n+            console.error('Erreur lors du chargement des détails de l\\'agence:', err);\r\n+            this.snackBar.open(err.message || 'Une erreur est survenue lors du chargement des détails.', 'Fermer', { duration: 5000 });\r\n+            return EMPTY;\r\n+          }),\r\n+          finalize(() => this.isLoading = false)\r\n+        ).subscribe();\r\n   }\r\n \r\n   onProfileSubmit(): void {\r\n     if (this.profileForm.valid && this.currentUser) {\r\n"
                },
                {
                    "date": 1749462606361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n   passwordForm!: FormGroup;\r\n   currentUser!: any | null; \r\n   isLoading = false;\r\n   isSaving = false;\r\n-  constructor(private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n+  constructor(\r\n+    private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749462611856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n   currentUser!: any | null; \r\n   isLoading = false;\r\n   isSaving = false;\r\n   constructor(\r\n-    private fb: FormBuilder, private userService: UserService, private authService: AuthService) {}\r\n+    private fb: FormBuilder, \r\n+    private userService: UserService, \r\n+    private authService: AuthService) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749462617374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,12 @@\n   isSaving = false;\r\n   constructor(\r\n     private fb: FormBuilder, \r\n     private userService: UserService, \r\n-    private authService: AuthService) {}\r\n+    private authService: AuthService,\r\n+        private snackBar: MatSnackBar\r\n+    \r\n+  ) {}\r\n \r\n   ngOnInit(): void {\r\n     // Initialiser le formulaire de profil\r\n     this.profileForm = this.fb.group({\r\n"
                },
                {
                    "date": 1749462630158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { Component, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { AuthService } from '../services/auth.service';\r\n import { UserService } from '../services/UserService';\r\n+import { MatSnackBar } from '@angular/material/snack-bar';\r\n \r\n @Component({\r\n   selector: 'app-profile',\r\n   templateUrl: './profile.component.html',\r\n@@ -50,9 +51,9 @@\n           this.isLoading = false;\r\n           return;\r\n         }\r\n     \r\n-        this.agenceService.getAgenceByUser(userId).pipe(\r\n+        this.userService.getAgenceByUser(userId).pipe(\r\n           switchMap(groups => {\r\n             if (!groups || groups.length === 0) {\r\n               return throwError(() => new Error('L\\'utilisateur n\\'est assigné à aucune agence (groupe Keycloak).'));\r\n             }\r\n"
                },
                {
                    "date": 1749462635459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n           this.isLoading = false;\r\n           return;\r\n         }\r\n     \r\n-        this.userService.getAgenceByUser(userId).pipe(\r\n+        this.userService.getUserById(userId).pipe(\r\n           switchMap(groups => {\r\n             if (!groups || groups.length === 0) {\r\n               return throwError(() => new Error('L\\'utilisateur n\\'est assigné à aucune agence (groupe Keycloak).'));\r\n             }\r\n"
                },
                {
                    "date": 1749462691480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,22 @@\n           this.snackBar.open('Impossible de récupérer l\\'identifiant utilisateur.', 'Fermer', { duration: 3000 });\r\n           this.isLoading = false;\r\n           return;\r\n         }\r\n-        \r\n+        this.agenceService.getAllAgencies().subscribe({\r\n+      next: (agencies) => {\r\n+        this.agencies = agencies;\r\n+        this.filteredAgencies = [...this.agencies];\r\n+        console.log('Agences chargées:', this.agencies);\r\n+        console.log(\"les agence filtreee\", this.filteredAgencies)\r\n+        this.isLoading = false;\r\n+      },\r\n+      error: (err) => {\r\n+        console.error('Erreur:', err);\r\n+        // Affichez un message d'erreur à l'utilisateur\r\n+        this.isLoading = false;\r\n+      }\r\n+    });\r\n         this.userService.getUserById(userId).pipe(\r\n           switchMap(groups => {\r\n             if (!groups || groups.length === 0) {\r\n               return throwError(() => new Error('L\\'utilisateur n\\'est assigné à aucune agence (groupe Keycloak).'));\r\n"
                }
            ],
            "date": 1746446055235,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrl: './profile.component.scss',\r\n  standalone: false\r\n})\r\nexport class ProfileComponent {\r\n\r\n}\r\n"
        }
    ]
}