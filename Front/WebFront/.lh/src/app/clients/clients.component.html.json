{
    "sourceFile": "src/app/clients/clients.component.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1747785703590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747785734315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,9 @@\n         <div class=\"view-mode\">\r\n           <button (click)=\"toggleViewMode('list')\" [class.active]=\"viewMode === 'list'\" matTooltip=\"Vue Liste\">\r\n             <mat-icon>view_list</mat-icon>\r\n           </button>\r\n-          <button (click)=\"toggleViewMode('card')\" [class.active]=\"viewMode === 'card'\" matTooltip=\"Vue Cartes\">\r\n-            <mat-icon>view_module</mat-icon>\r\n-          </button>\r\n+          \r\n         </div>\r\n \r\n         <!-- Add Client Button -->\r\n         <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n"
                },
                {
                    "date": 1747785755026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,216 @@\n           <button (click)=\"toggleViewMode('list')\" [class.active]=\"viewMode === 'list'\" matTooltip=\"Vue Liste\">\r\n             <mat-icon>view_list</mat-icon>\r\n           </button>\r\n           \r\n-        </div>\r\n+        </div>import { Component, OnInit } from '@angular/core';\r\n+        import { Router } from '@angular/router';\r\n+        import { HttpHeaders, HttpClient } from '@angular/common/http'; // Assuming you might use HttpClient directly or in a service\r\n+        // import { ClientService } from './client.service'; // Supposons que vous ayez un service pour les clients\r\n+        // import { AuthService } from '../auth/auth.service'; // Supposons que vous ayez un service d'authentification\r\n+        \r\n+        // Définition de l'interface Client (vous pouvez la placer dans un fichier séparé, ex: client.model.ts)\r\n+        export interface Client {\r\n+          id: string;\r\n+          name: string;\r\n+          address: string;\r\n+          email: string;\r\n+          phone: string;\r\n+          createdAt: number; // Ou Date, selon comment vous le gérez\r\n+          idCompany?: string; // Optionnel si non utilisé directement dans le template\r\n+          companyName?: string; // Optionnel si non utilisé directement dans le template\r\n+        }\r\n+        \r\n+        @Component({\r\n+          selector: 'app-clients',\r\n+          templateUrl: './clients.component.html',\r\n+          styleUrls: ['./clients.component.scss']\r\n+        })\r\n+        export class ClientsComponent implements OnInit {\r\n+        \r\n+          clients: Client[] = [];\r\n+          filteredClients: Client[] = [];\r\n+          searchQuery: string = '';\r\n+          viewMode: 'list' | 'card' = 'list'; // Default view mode\r\n+        \r\n+          editingClientId: string | null = null;\r\n+          editedClientData: Partial<Client> = {}; // Pour l'édition en ligne\r\n+        \r\n+          // Simulez votre AuthService et ClientService ici ou injectez-les\r\n+          // constructor(\r\n+          //   private clientService: ClientService,\r\n+          //   private authService: AuthService,\r\n+          //   private router: Router,\r\n+          //   private http: HttpClient // Si vous utilisez HttpClient directement pour certaines opérations\r\n+          // ) { }\r\n+        \r\n+          // Constructeur simplifié pour l'exemple\r\n+          constructor(\r\n+            private router: Router,\r\n+            // private authService: AuthService, // Décommentez si AuthService est utilisé pour getAccessToken\r\n+            private http: HttpClient // Exemple, idéalement via un service\r\n+          ) {}\r\n+        \r\n+          ngOnInit(): void {\r\n+            this.loadClients();\r\n+          }\r\n+        \r\n+          // Méthode pour obtenir les en-têtes API (comme fournie)\r\n+          private getApiHeaders(): HttpHeaders {\r\n+            // const token = this.authService.getAccessToken(); // Décommentez si vous utilisez AuthService\r\n+            const token = 'VOTRE_TOKEN_ICI'; // Placeholder, remplacez par la vraie logique\r\n+            return new HttpHeaders({\r\n+              'Content-Type': 'application/json',\r\n+              'Authorization': `Bearer ${token}`\r\n+            });\r\n+          }\r\n+        \r\n+          loadClients(): void {\r\n+            // Simulez la récupération des clients. Remplacez par un appel à votre ClientService.\r\n+            // Exemple avec HttpClient (adaptez l'URL)\r\n+            // const headers = this.getApiHeaders();\r\n+            // this.http.get<Client[]>('/api/clients', { headers }).subscribe({\r\n+            //   next: (data) => {\r\n+            //     this.clients = data;\r\n+            //     this.applyFilter(); // Appliquer le filtre initial (qui sera vide au début)\r\n+            //   },\r\n+            //   error: (err) => console.error('Erreur lors de la récupération des clients', err)\r\n+            // });\r\n+        \r\n+            // Données de simulation pour l'exemple :\r\n+            this.clients = [\r\n+              {\r\n+                \"id\": \"50da8c53-f1bb-47cb-9d06-b31e55706ed8\",\r\n+                \"name\": \"Salma Bennani\",\r\n+                \"address\": \"123 Rue de la Paix, Tunis\",\r\n+                \"email\": \"salma@gmail.com\",\r\n+                \"phone\": \"216 XX XXX XXX\",\r\n+                \"createdAt\": 1747780390913,\r\n+                \"idCompany\": \"680657ad26cbca08d31f221c\",\r\n+                \"companyName\": \"Archi Concept Tunisie\"\r\n+              },\r\n+              {\r\n+                \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n+                \"name\": \"Ahmed Cherif\",\r\n+                \"address\": \"45 Avenue Habib Bourguiba, Sfax\",\r\n+                \"email\": \"ahmed.c@example.com\",\r\n+                \"phone\": \"216 YY YYY YYY\",\r\n+                \"createdAt\": 1747700000000\r\n+              },\r\n+              {\r\n+                \"id\": \"f0e1d2c3-b4a5-6789-0123-456789abcdef\",\r\n+                \"name\": \"Fatma Gharbi\",\r\n+                \"address\": \"\", // Adresse vide\r\n+                \"email\": \"fatma.gharbi@mail.com\",\r\n+                \"phone\": \"\", // Téléphone vide\r\n+                \"createdAt\": 1747600000000\r\n+              }\r\n+            ];\r\n+            this.applyFilter();\r\n+          }\r\n+        \r\n+          applyFilter(): void {\r\n+            const query = this.searchQuery.toLowerCase().trim();\r\n+            if (!query) {\r\n+              this.filteredClients = [...this.clients];\r\n+            } else {\r\n+              this.filteredClients = this.clients.filter(client =>\r\n+                client.name.toLowerCase().includes(query) ||\r\n+                client.email.toLowerCase().includes(query) ||\r\n+                (client.address && client.address.toLowerCase().includes(query)) ||\r\n+                (client.phone && client.phone.toLowerCase().includes(query))\r\n+              );\r\n+            }\r\n+          }\r\n+        \r\n+          toggleViewMode(mode: 'list' | 'card'): void {\r\n+            this.viewMode = mode;\r\n+          }\r\n+        \r\n+          addClient(): void {\r\n+            console.log('Ouvrir le formulaire/modal pour ajouter un nouveau client');\r\n+            // Exemple: this.router.navigate(['/clients/nouveau']);\r\n+            // Ou ouvrir un dialogue modal\r\n+          }\r\n+        \r\n+          goToClientDetails(client: Client): void {\r\n+            // Si l'édition est active sur cette ligne, ne pas naviguer\r\n+            if (this.editingClientId === client.id) {\r\n+              return;\r\n+            }\r\n+            console.log('Naviguer vers les détails du client:', client.id);\r\n+            // Exemple: this.router.navigate(['/clients', client.id]);\r\n+          }\r\n+        \r\n+          // --- Fonctions pour l'édition en ligne (exemple basique) ---\r\n+          // Vous devrez probablement ajouter des boutons \"Modifier\", \"Sauvegarder\", \"Annuler\" dans le HTML\r\n+          // et appeler ces méthodes. Pour l'instant, le HTML active l'édition au clic sur la ligne.\r\n+        \r\n+          // Cette méthode n'est plus directement appelée par le (click) sur <tr> si goToClientDetails est prioritaire.\r\n+          // Vous pourriez avoir un bouton \"Modifier\" séparé.\r\n+          // startEdit(client: Client, event: MouseEvent): void {\r\n+          //   event.stopPropagation(); // Empêche goToClientDetails d'être appelé\r\n+          //   this.editingClientId = client.id;\r\n+          //   this.editedClientData = { ...client }; // Copie les données pour l'édition\r\n+          // }\r\n+        \r\n+          // saveEdit(clientId: string, event: MouseEvent): void {\r\n+          //   event.stopPropagation();\r\n+          //   if (!this.editedClientData) return;\r\n+        \r\n+          //   // Logique pour sauvegarder les modifications via votre service\r\n+          //   // this.clientService.updateClient(clientId, this.editedClientData).subscribe({\r\n+          //   //   next: (updatedClient) => {\r\n+          //   //     const index = this.clients.findIndex(c => c.id === clientId);\r\n+          //   //     if (index !== -1) {\r\n+          //   //       this.clients[index] = { ...this.clients[index], ...updatedClient }; // Mettre à jour avec les données du serveur\r\n+          //   //       this.applyFilter();\r\n+          //   //     }\r\n+          //   //     this.cancelEdit(event);\r\n+          //   //   },\r\n+          //   //   error: (err) => console.error('Erreur lors de la mise à jour du client', err)\r\n+          //   // });\r\n+          //   console.log('Sauvegarder les modifications pour le client:', clientId, this.editedClientData);\r\n+          //   const index = this.clients.findIndex(c => c.id === clientId);\r\n+          //   if (index !== -1) {\r\n+          //       this.clients[index] = { ...this.clients[index], ...this.editedClientData };\r\n+          //       this.applyFilter();\r\n+          //   }\r\n+          //   this.editingClientId = null;\r\n+          //   this.editedClientData = {};\r\n+          // }\r\n+        \r\n+          // cancelEdit(event?: MouseEvent): void {\r\n+          //   if(event) event.stopPropagation();\r\n+          //   this.editingClientId = null;\r\n+          //   this.editedClientData = {};\r\n+          // }\r\n+          // --- Fin des fonctions d'édition en ligne ---\r\n+        \r\n+          deleteClient(clientId: string, event: MouseEvent): void {\r\n+            event.stopPropagation(); // Empêche le clic de se propager à la ligne (goToClientDetails)\r\n+        \r\n+            // Demander confirmation avant de supprimer\r\n+            if (confirm('Êtes-vous sûr de vouloir supprimer ce client ?')) {\r\n+              // Logique pour supprimer le client via votre service\r\n+              // const headers = this.getApiHeaders();\r\n+              // this.http.delete(`/api/clients/${clientId}`, { headers }).subscribe({\r\n+              //   next: () => {\r\n+              //     this.clients = this.clients.filter(c => c.id !== clientId);\r\n+              //     this.applyFilter();\r\n+              //     console.log('Client supprimé:', clientId);\r\n+              //   },\r\n+              //   error: (err) => console.error('Erreur lors de la suppression du client', err)\r\n+              // });\r\n+        \r\n+              // Simulation\r\n+              this.clients = this.clients.filter(c => c.id !== clientId);\r\n+              this.applyFilter();\r\n+              console.log('Client supprimé (simulation):', clientId);\r\n+            }\r\n+          }\r\n+        }\r\n+        \r\n \r\n         <!-- Add Client Button -->\r\n         <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n           <mat-icon>add</mat-icon>\r\n"
                },
                {
                    "date": 1747786581599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,222 +16,9 @@\n           <mat-icon>filter_list</mat-icon>\r\n           <span>Filtrer</span>\r\n         </button>\r\n \r\n-        <!-- View Mode Toggle -->\r\n-        <div class=\"view-mode\">\r\n-          <button (click)=\"toggleViewMode('list')\" [class.active]=\"viewMode === 'list'\" matTooltip=\"Vue Liste\">\r\n-            <mat-icon>view_list</mat-icon>\r\n-          </button>\r\n-          \r\n-        </div>import { Component, OnInit } from '@angular/core';\r\n-        import { Router } from '@angular/router';\r\n-        import { HttpHeaders, HttpClient } from '@angular/common/http'; // Assuming you might use HttpClient directly or in a service\r\n-        // import { ClientService } from './client.service'; // Supposons que vous ayez un service pour les clients\r\n-        // import { AuthService } from '../auth/auth.service'; // Supposons que vous ayez un service d'authentification\r\n         \r\n-        // Définition de l'interface Client (vous pouvez la placer dans un fichier séparé, ex: client.model.ts)\r\n-        export interface Client {\r\n-          id: string;\r\n-          name: string;\r\n-          address: string;\r\n-          email: string;\r\n-          phone: string;\r\n-          createdAt: number; // Ou Date, selon comment vous le gérez\r\n-          idCompany?: string; // Optionnel si non utilisé directement dans le template\r\n-          companyName?: string; // Optionnel si non utilisé directement dans le template\r\n-        }\r\n-        \r\n-        @Component({\r\n-          selector: 'app-clients',\r\n-          templateUrl: './clients.component.html',\r\n-          styleUrls: ['./clients.component.scss']\r\n-        })\r\n-        export class ClientsComponent implements OnInit {\r\n-        \r\n-          clients: Client[] = [];\r\n-          filteredClients: Client[] = [];\r\n-          searchQuery: string = '';\r\n-          viewMode: 'list' | 'card' = 'list'; // Default view mode\r\n-        \r\n-          editingClientId: string | null = null;\r\n-          editedClientData: Partial<Client> = {}; // Pour l'édition en ligne\r\n-        \r\n-          // Simulez votre AuthService et ClientService ici ou injectez-les\r\n-          // constructor(\r\n-          //   private clientService: ClientService,\r\n-          //   private authService: AuthService,\r\n-          //   private router: Router,\r\n-          //   private http: HttpClient // Si vous utilisez HttpClient directement pour certaines opérations\r\n-          // ) { }\r\n-        \r\n-          // Constructeur simplifié pour l'exemple\r\n-          constructor(\r\n-            private router: Router,\r\n-            // private authService: AuthService, // Décommentez si AuthService est utilisé pour getAccessToken\r\n-            private http: HttpClient // Exemple, idéalement via un service\r\n-          ) {}\r\n-        \r\n-          ngOnInit(): void {\r\n-            this.loadClients();\r\n-          }\r\n-        \r\n-          // Méthode pour obtenir les en-têtes API (comme fournie)\r\n-          private getApiHeaders(): HttpHeaders {\r\n-            // const token = this.authService.getAccessToken(); // Décommentez si vous utilisez AuthService\r\n-            const token = 'VOTRE_TOKEN_ICI'; // Placeholder, remplacez par la vraie logique\r\n-            return new HttpHeaders({\r\n-              'Content-Type': 'application/json',\r\n-              'Authorization': `Bearer ${token}`\r\n-            });\r\n-          }\r\n-        \r\n-          loadClients(): void {\r\n-            // Simulez la récupération des clients. Remplacez par un appel à votre ClientService.\r\n-            // Exemple avec HttpClient (adaptez l'URL)\r\n-            // const headers = this.getApiHeaders();\r\n-            // this.http.get<Client[]>('/api/clients', { headers }).subscribe({\r\n-            //   next: (data) => {\r\n-            //     this.clients = data;\r\n-            //     this.applyFilter(); // Appliquer le filtre initial (qui sera vide au début)\r\n-            //   },\r\n-            //   error: (err) => console.error('Erreur lors de la récupération des clients', err)\r\n-            // });\r\n-        \r\n-            // Données de simulation pour l'exemple :\r\n-            this.clients = [\r\n-              {\r\n-                \"id\": \"50da8c53-f1bb-47cb-9d06-b31e55706ed8\",\r\n-                \"name\": \"Salma Bennani\",\r\n-                \"address\": \"123 Rue de la Paix, Tunis\",\r\n-                \"email\": \"salma@gmail.com\",\r\n-                \"phone\": \"216 XX XXX XXX\",\r\n-                \"createdAt\": 1747780390913,\r\n-                \"idCompany\": \"680657ad26cbca08d31f221c\",\r\n-                \"companyName\": \"Archi Concept Tunisie\"\r\n-              },\r\n-              {\r\n-                \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n-                \"name\": \"Ahmed Cherif\",\r\n-                \"address\": \"45 Avenue Habib Bourguiba, Sfax\",\r\n-                \"email\": \"ahmed.c@example.com\",\r\n-                \"phone\": \"216 YY YYY YYY\",\r\n-                \"createdAt\": 1747700000000\r\n-              },\r\n-              {\r\n-                \"id\": \"f0e1d2c3-b4a5-6789-0123-456789abcdef\",\r\n-                \"name\": \"Fatma Gharbi\",\r\n-                \"address\": \"\", // Adresse vide\r\n-                \"email\": \"fatma.gharbi@mail.com\",\r\n-                \"phone\": \"\", // Téléphone vide\r\n-                \"createdAt\": 1747600000000\r\n-              }\r\n-            ];\r\n-            this.applyFilter();\r\n-          }\r\n-        \r\n-          applyFilter(): void {\r\n-            const query = this.searchQuery.toLowerCase().trim();\r\n-            if (!query) {\r\n-              this.filteredClients = [...this.clients];\r\n-            } else {\r\n-              this.filteredClients = this.clients.filter(client =>\r\n-                client.name.toLowerCase().includes(query) ||\r\n-                client.email.toLowerCase().includes(query) ||\r\n-                (client.address && client.address.toLowerCase().includes(query)) ||\r\n-                (client.phone && client.phone.toLowerCase().includes(query))\r\n-              );\r\n-            }\r\n-          }\r\n-        \r\n-          toggleViewMode(mode: 'list' | 'card'): void {\r\n-            this.viewMode = mode;\r\n-          }\r\n-        \r\n-          addClient(): void {\r\n-            console.log('Ouvrir le formulaire/modal pour ajouter un nouveau client');\r\n-            // Exemple: this.router.navigate(['/clients/nouveau']);\r\n-            // Ou ouvrir un dialogue modal\r\n-          }\r\n-        \r\n-          goToClientDetails(client: Client): void {\r\n-            // Si l'édition est active sur cette ligne, ne pas naviguer\r\n-            if (this.editingClientId === client.id) {\r\n-              return;\r\n-            }\r\n-            console.log('Naviguer vers les détails du client:', client.id);\r\n-            // Exemple: this.router.navigate(['/clients', client.id]);\r\n-          }\r\n-        \r\n-          // --- Fonctions pour l'édition en ligne (exemple basique) ---\r\n-          // Vous devrez probablement ajouter des boutons \"Modifier\", \"Sauvegarder\", \"Annuler\" dans le HTML\r\n-          // et appeler ces méthodes. Pour l'instant, le HTML active l'édition au clic sur la ligne.\r\n-        \r\n-          // Cette méthode n'est plus directement appelée par le (click) sur <tr> si goToClientDetails est prioritaire.\r\n-          // Vous pourriez avoir un bouton \"Modifier\" séparé.\r\n-          // startEdit(client: Client, event: MouseEvent): void {\r\n-          //   event.stopPropagation(); // Empêche goToClientDetails d'être appelé\r\n-          //   this.editingClientId = client.id;\r\n-          //   this.editedClientData = { ...client }; // Copie les données pour l'édition\r\n-          // }\r\n-        \r\n-          // saveEdit(clientId: string, event: MouseEvent): void {\r\n-          //   event.stopPropagation();\r\n-          //   if (!this.editedClientData) return;\r\n-        \r\n-          //   // Logique pour sauvegarder les modifications via votre service\r\n-          //   // this.clientService.updateClient(clientId, this.editedClientData).subscribe({\r\n-          //   //   next: (updatedClient) => {\r\n-          //   //     const index = this.clients.findIndex(c => c.id === clientId);\r\n-          //   //     if (index !== -1) {\r\n-          //   //       this.clients[index] = { ...this.clients[index], ...updatedClient }; // Mettre à jour avec les données du serveur\r\n-          //   //       this.applyFilter();\r\n-          //   //     }\r\n-          //   //     this.cancelEdit(event);\r\n-          //   //   },\r\n-          //   //   error: (err) => console.error('Erreur lors de la mise à jour du client', err)\r\n-          //   // });\r\n-          //   console.log('Sauvegarder les modifications pour le client:', clientId, this.editedClientData);\r\n-          //   const index = this.clients.findIndex(c => c.id === clientId);\r\n-          //   if (index !== -1) {\r\n-          //       this.clients[index] = { ...this.clients[index], ...this.editedClientData };\r\n-          //       this.applyFilter();\r\n-          //   }\r\n-          //   this.editingClientId = null;\r\n-          //   this.editedClientData = {};\r\n-          // }\r\n-        \r\n-          // cancelEdit(event?: MouseEvent): void {\r\n-          //   if(event) event.stopPropagation();\r\n-          //   this.editingClientId = null;\r\n-          //   this.editedClientData = {};\r\n-          // }\r\n-          // --- Fin des fonctions d'édition en ligne ---\r\n-        \r\n-          deleteClient(clientId: string, event: MouseEvent): void {\r\n-            event.stopPropagation(); // Empêche le clic de se propager à la ligne (goToClientDetails)\r\n-        \r\n-            // Demander confirmation avant de supprimer\r\n-            if (confirm('Êtes-vous sûr de vouloir supprimer ce client ?')) {\r\n-              // Logique pour supprimer le client via votre service\r\n-              // const headers = this.getApiHeaders();\r\n-              // this.http.delete(`/api/clients/${clientId}`, { headers }).subscribe({\r\n-              //   next: () => {\r\n-              //     this.clients = this.clients.filter(c => c.id !== clientId);\r\n-              //     this.applyFilter();\r\n-              //     console.log('Client supprimé:', clientId);\r\n-              //   },\r\n-              //   error: (err) => console.error('Erreur lors de la suppression du client', err)\r\n-              // });\r\n-        \r\n-              // Simulation\r\n-              this.clients = this.clients.filter(c => c.id !== clientId);\r\n-              this.applyFilter();\r\n-              console.log('Client supprimé (simulation):', clientId);\r\n-            }\r\n-          }\r\n-        }\r\n-        \r\n \r\n         <!-- Add Client Button -->\r\n         <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n           <mat-icon>add</mat-icon>\r\n"
                },
                {
                    "date": 1747787215690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n+            <tr *ngFor=\"let client of clients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n                 <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n                 <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n"
                },
                {
                    "date": 1747787237913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            <tr *ngFor=\"let client of clients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n+            <tr *ngFor=\"let client of cli\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n                 <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n                 <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n"
                },
                {
                    "date": 1747787577405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,13 @@\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            <tr *ngFor=\"let client of cli\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n+            <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n-                <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n-                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n-              </td>\r\n+                <span>{{ client.name }}</span> <!-- Name is not editable as per request -->\r\n+  </td>\r\n               <!-- Created At -->\r\n               <td>\r\n                 {{ client.createdAt | date:'dd/MM/yyyy' }}\r\n               </td>\r\n"
                },
                {
                    "date": 1747787610172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,19 +45,19 @@\n           <tbody>\r\n             <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n-                <span>{{ client.name }}</span> <!-- Name is not editable as per request -->\r\n-  </td>\r\n+                <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n+                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n+              </td>\r\n               <!-- Created At -->\r\n               <td>\r\n                 {{ client.createdAt | date:'dd/MM/yyyy' }}\r\n               </td>\r\n               <!-- Address Column -->\r\n               <td>\r\n                 <span *ngIf=\"editingClientId !== client.id\">{{ client.address || 'N/A' }}</span>\r\n-                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.address\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n-              </td>\r\n+                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.address\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />  </td>\r\n               <!-- Email -->\r\n               <td>\r\n                 {{ client.email }}\r\n               </td>\r\n"
                },
                {
                    "date": 1747787622738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,12 +55,14 @@\n               </td>\r\n               <!-- Address Column -->\r\n               <td>\r\n                 <span *ngIf=\"editingClientId !== client.id\">{{ client.address || 'N/A' }}</span>\r\n-                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.address\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />  </td>\r\n+                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.address\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />\r\n+              </td>\r\n               <!-- Email -->\r\n               <td>\r\n-                {{ client.email }}\r\n+                <span>{{ client.email }}</span> <!-- Email is not editable as per request -->\r\n+          \r\n               </td>\r\n               <!-- Phone -->\r\n               <td>\r\n                 {{ client.phone || 'N/A' }}\r\n"
                },
                {
                    "date": 1747787631771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,9 @@\n           <tbody>\r\n             <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n-                <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n-                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n+                <span>{{ client.name }}</span> <!-- Name is not editable as per request -->\r\n               </td>\r\n               <!-- Created At -->\r\n               <td>\r\n                 {{ client.createdAt | date:'dd/MM/yyyy' }}\r\n"
                },
                {
                    "date": 1747787661055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n           \r\n               </td>\r\n               <!-- Phone -->\r\n               <td>\r\n-                {{ client.phone || 'N/A' }}\r\n+               <span *ngIf=\"editingClientId !== client.id\">{{ client.phone || 'N/A' }}</span>\r\n               </td>\r\n                <td class=\"actions\">\r\n                  <ng-container *ngIf=\"editingClientId !== client.id\">\r\n                   <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n"
                },
                {
                    "date": 1747787669473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,10 @@\n               </td>\r\n               <!-- Phone -->\r\n               <td>\r\n                <span *ngIf=\"editingClientId !== client.id\">{{ client.phone || 'N/A' }}</span>\r\n+               <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.phone\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />\r\n+             \r\n               </td>\r\n                <td class=\"actions\">\r\n                  <ng-container *ngIf=\"editingClientId !== client.id\">\r\n                   <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n"
                },
                {
                    "date": 1747787688359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,11 @@\n              \r\n               </td>\r\n                <td class=\"actions\">\r\n                  <ng-container *ngIf=\"editingClientId !== client.id\">\r\n+                    <button class=\"edit-btn\" (click)=\"startEdit(client, $event)\" title=\"Modifier\">\r\n+                    <i class=\"bi bi-pencil\"></i>\r\n+                  </button>\r\n                   <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n                     <i class=\"bi bi-trash\"></i>\r\n                   </button>\r\n                 </ng-container>\r\n"
                },
                {
                    "date": 1747787699229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,16 @@\n                   <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n                     <i class=\"bi bi-trash\"></i>\r\n                   </button>\r\n                 </ng-container>\r\n-                 <!-- Vous pouvez ajouter des boutons sauvegarder/annuler ici si l'édition en ligne est plus complexe -->\r\n+                <ng-container *ngIf=\"editingClientId === client.id\">\r\n+                  <button class=\"save-btn\" (click)=\"saveEdit(client.id, $event)\" title=\"Sauvegarder\">\r\n+                    <i class=\"bi bi-check-lg\"></i>\r\n+                  </button>\r\n+                  <button class=\"cancel-btn\" (click)=\"cancelEdit($event)\" title=\"Annuler\">\r\n+                    <i class=\"bi bi-x-lg\"></i>\r\n+                  </button>\r\n+                </ng-container>\r\n               </td>\r\n             </tr>\r\n           </tbody>\r\n         </table>\r\n"
                },
                {
                    "date": 1747847811856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n-            <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n+            <tr *ngFor=\"let client of filteredClients\"  [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n               <!-- Name Column -->\r\n               <td>\r\n                 <span>{{ client.name }}</span> <!-- Name is not editable as per request -->\r\n               </td>\r\n"
                },
                {
                    "date": 1747848541791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n       </div>\r\n \r\n       <!-- Card View -->\r\n       <div *ngIf=\"viewMode === 'card'\" class=\"client-cards-grid\"> <!-- Renamed class from project-cards-grid -->\r\n-        <div class=\"client-card\" *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\"> <!-- Updated iteration and class from project-card -->\r\n+        <div class=\"client-card\" *ngFor=\"let client of filteredClients\" \"> <!-- Updated iteration and class from project-card -->\r\n           <div class=\"card-header\">\r\n             <h3>{{ client.name }}</h3>\r\n             <div class=\"card-creation-date\">Créé le: {{ client.createdAt | date:'dd/MM/yyyy' }}</div> <!-- Adapted from card-dates -->\r\n           </div>\r\n"
                },
                {
                    "date": 1747851172527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,25 +68,26 @@\n                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.phone\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />\r\n              \r\n               </td>\r\n                <td class=\"actions\">\r\n-                 <ng-container *ngIf=\"editingClientId !== client.id\">\r\n-                    <button class=\"edit-btn\" (click)=\"startEdit(client, $event)\" title=\"Modifier\">\r\n-                    <i class=\"bi bi-pencil\"></i>\r\n-                  </button>\r\n-                  <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n-                    <i class=\"bi bi-trash\"></i>\r\n-                  </button>\r\n-                </ng-container>\r\n-                <ng-container *ngIf=\"editingClientId === client.id\">\r\n-                  <button class=\"save-btn\" (click)=\"saveEdit(client.id, $event)\" title=\"Sauvegarder\">\r\n-                    <i class=\"bi bi-check-lg\"></i>\r\n-                  </button>\r\n-                  <button class=\"cancel-btn\" (click)=\"cancelEdit($event)\" title=\"Annuler\">\r\n-                    <i class=\"bi bi-x-lg\"></i>\r\n-                  </button>\r\n-                </ng-container>\r\n-              </td>\r\n+  <ng-container *ngIf=\"editingClientId !== client.id\">\r\n+    <button class=\"edit-btn\" (click)=\"startEdit(client, $event)\" title=\"Modifier\">\r\n+      <i class=\"bi bi-pencil\"></i>\r\n+    </button>\r\n+    <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\">\r\n+      <i class=\"bi bi-trash\"></i>\r\n+    </button>\r\n+  </ng-container>\r\n+  <ng-container *ngIf=\"editingClientId === client.id\">\r\n+    <button class=\"save-btn\" (click)=\"saveEdit(client.id, $event)\" title=\"Sauvegarder\">\r\n+      <i class=\"bi bi-check-lg\"></i>\r\n+    </button>\r\n+    <button class=\"cancel-btn\" (click)=\"cancelEdit($event)\" title=\"Annuler\">\r\n+      <i class=\"bi bi-x-lg\"></i>\r\n+    </button>\r\n+  </ng-container>\r\n+</td>\r\n+\r\n             </tr>\r\n           </tbody>\r\n         </table>\r\n         <div *ngIf=\"!filteredClients || filteredClients.length === 0\" style=\"text-align: center; padding: 20px; color: var(--text-color-secondary);\">\r\n@@ -95,9 +96,9 @@\n       </div>\r\n \r\n       <!-- Card View -->\r\n       <div *ngIf=\"viewMode === 'card'\" class=\"client-cards-grid\"> <!-- Renamed class from project-cards-grid -->\r\n-        <div class=\"client-card\" *ngFor=\"let client of filteredClients\" \"> <!-- Updated iteration and class from project-card -->\r\n+        <div class=\"client-card\" *ngFor=\"let client of filteredClients\" > <!-- Updated iteration and class from project-card -->\r\n           <div class=\"card-header\">\r\n             <h3>{{ client.name }}</h3>\r\n             <div class=\"card-creation-date\">Créé le: {{ client.createdAt | date:'dd/MM/yyyy' }}</div> <!-- Adapted from card-dates -->\r\n           </div>\r\n"
                },
                {
                    "date": 1747851289971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,9 @@\n       </div>\r\n \r\n       <!-- Actions: Filter, View Mode, Add Client -->\r\n       <div class=\"actions-container\">\r\n-        <!-- Filter Button (Functionality to be implemented if needed) -->\r\n-        <button class=\"filter-button\">\r\n-          <mat-icon>filter_list</mat-icon>\r\n-          <span>Filtrer</span>\r\n-        </button>\r\n+        \r\n \r\n         \r\n \r\n         <!-- Add Client Button -->\r\n"
                },
                {
                    "date": 1747851332748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,8 @@\n       <!-- Actions: Filter, View Mode, Add Client -->\r\n       <div class=\"actions-container\">\r\n         \r\n \r\n-        \r\n-\r\n         <!-- Add Client Button -->\r\n         <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n           <mat-icon>add</mat-icon>\r\n           <span>Nouveau Client</span> <!-- Updated text -->\r\n"
                },
                {
                    "date": 1747940070834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n \r\n       <!-- Actions: Filter, View Mode, Add Client -->\r\n       <div class=\"actions-container\">\r\n         \r\n-\r\n         <!-- Add Client Button -->\r\n         <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n           <mat-icon>add</mat-icon>\r\n           <span>Nouveau Client</span> <!-- Updated text -->\r\n@@ -32,8 +31,9 @@\n               <th>Date Création</th>\r\n               <th>Adresse</th>\r\n               <th>Email</th>\r\n               <th>Téléphone</th>\r\n+              \r\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n"
                },
                {
                    "date": 1747956880980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n               <th>Date Création</th>\r\n               <th>Adresse</th>\r\n               <th>Email</th>\r\n               <th>Téléphone</th>\r\n-              \r\n+              <th>Statut MDP</th>\r\n+             \r\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n"
                },
                {
                    "date": 1747956886584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n               <th>Adresse</th>\r\n               <th>Email</th>\r\n               <th>Téléphone</th>\r\n               <th>Statut MDP</th>\r\n-             \r\n               <th>Actions</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n"
                },
                {
                    "date": 1747956904036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,25 @@\n                <span *ngIf=\"editingClientId !== client.id\">{{ client.phone || 'N/A' }}</span>\r\n                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.phone\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" (keydown.enter)=\"saveEdit(client.id, $event)\" (keydown.escape)=\"cancelEdit($event)\" />\r\n              \r\n               </td>\r\n+              <!-- Statut Mot de Passe Keycloak -->\r\n+              <td>\r\n+                <ng-container *ngIf=\"client.isLoadingCredentials\">\r\n+                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n+                </ng-container>\r\n+                <ng-container *ngIf=\"!client.isLoadingCredentials\">\r\n+                  <span *ngIf=\"client.hasPassword === true\" class=\"badge bg-success\">Défini</span>\r\n+                  <span *ngIf=\"client.hasPassword === false\" class=\"badge bg-warning\">Non défini</span>\r\n+                  <span *ngIf=\"client.hasPassword === undefined\" class=\"badge bg-secondary\">Inconnu</span>\r\n+                  <button *ngIf=\"client.hasPassword === false\"\r\n+                          class=\"btn-set-password ms-2\"\r\n+                          (click)=\"openSetPasswordModal(client, $event)\"\r\n+                          title=\"Définir le mot de passe\">\r\n+                    <i class=\"bi bi-key-fill\"></i> Définir\r\n+                  </button>\r\n+                </ng-container>\r\n+              </td>\r\n                <td class=\"actions\">\r\n   <ng-container *ngIf=\"editingClientId !== client.id\">\r\n     <button class=\"edit-btn\" (click)=\"startEdit(client, $event)\" title=\"Modifier\">\r\n       <i class=\"bi bi-pencil\"></i>\r\n"
                }
            ],
            "date": 1747785703590,
            "name": "Commit-0",
            "content": "<div class=\"client-container\"> <!-- Renamed class from project-container -->\r\n    <app-header [title]=\"'Liste des Clients'\"></app-header> <!-- Updated title -->\r\n\r\n    <!-- Header Section -->\r\n    <div class=\"client-header\"> <!-- Renamed class from project-header -->\r\n      <!-- Search Bar -->\r\n      <div class=\"search-container\">\r\n        <mat-icon class=\"search-icon\">search</mat-icon>\r\n        <input type=\"text\" placeholder=\"Rechercher un client...\" [(ngModel)]=\"searchQuery\" (input)=\"applyFilter()\" /> <!-- Updated placeholder -->\r\n      </div>\r\n\r\n      <!-- Actions: Filter, View Mode, Add Client -->\r\n      <div class=\"actions-container\">\r\n        <!-- Filter Button (Functionality to be implemented if needed) -->\r\n        <button class=\"filter-button\">\r\n          <mat-icon>filter_list</mat-icon>\r\n          <span>Filtrer</span>\r\n        </button>\r\n\r\n        <!-- View Mode Toggle -->\r\n        <div class=\"view-mode\">\r\n          <button (click)=\"toggleViewMode('list')\" [class.active]=\"viewMode === 'list'\" matTooltip=\"Vue Liste\">\r\n            <mat-icon>view_list</mat-icon>\r\n          </button>\r\n          <button (click)=\"toggleViewMode('card')\" [class.active]=\"viewMode === 'card'\" matTooltip=\"Vue Cartes\">\r\n            <mat-icon>view_module</mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Add Client Button -->\r\n        <button class=\"add-client-button\" (click)=\"addClient()\"> <!-- Renamed class and method from add-project-button -->\r\n          <mat-icon>add</mat-icon>\r\n          <span>Nouveau Client</span> <!-- Updated text -->\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Client Display Area -->\r\n    <div class=\"client-display\"> <!-- Renamed class from project-display -->\r\n      <!-- List View (Table) -->\r\n      <div *ngIf=\"viewMode === 'list'\" class=\"client-table-card\"> <!-- Renamed class from project-table-card -->\r\n        <table class=\"data-table\"> <!-- Reusing .data-table style -->\r\n          <thead>\r\n            <tr>\r\n              <th>Nom du Client</th>\r\n              <th>Date Création</th>\r\n              <th>Adresse</th>\r\n              <th>Email</th>\r\n              <th>Téléphone</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\" [class.editing-row]=\"editingClientId === client.id\"> <!-- Updated iteration and variables -->\r\n              <!-- Name Column -->\r\n              <td>\r\n                <span *ngIf=\"editingClientId !== client.id\">{{ client.name }}</span>\r\n                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.name\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n              </td>\r\n              <!-- Created At -->\r\n              <td>\r\n                {{ client.createdAt | date:'dd/MM/yyyy' }}\r\n              </td>\r\n              <!-- Address Column -->\r\n              <td>\r\n                <span *ngIf=\"editingClientId !== client.id\">{{ client.address || 'N/A' }}</span>\r\n                <input *ngIf=\"editingClientId === client.id\" type=\"text\" [(ngModel)]=\"editedClientData.address\" class=\"inline-edit-input\" (click)=\"$event.stopPropagation()\" />\r\n              </td>\r\n              <!-- Email -->\r\n              <td>\r\n                {{ client.email }}\r\n              </td>\r\n              <!-- Phone -->\r\n              <td>\r\n                {{ client.phone || 'N/A' }}\r\n              </td>\r\n               <td class=\"actions\">\r\n                 <ng-container *ngIf=\"editingClientId !== client.id\">\r\n                  <button class=\"delete-btn\" (click)=\"deleteClient(client.id, $event)\" title=\"Supprimer\" > <!-- Updated method, added $event.stopPropagation() -->\r\n                    <i class=\"bi bi-trash\"></i>\r\n                  </button>\r\n                </ng-container>\r\n                 <!-- Vous pouvez ajouter des boutons sauvegarder/annuler ici si l'édition en ligne est plus complexe -->\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div *ngIf=\"!filteredClients || filteredClients.length === 0\" style=\"text-align: center; padding: 20px; color: var(--text-color-secondary);\">\r\n          Aucun client trouvé. <!-- Updated text -->\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Card View -->\r\n      <div *ngIf=\"viewMode === 'card'\" class=\"client-cards-grid\"> <!-- Renamed class from project-cards-grid -->\r\n        <div class=\"client-card\" *ngFor=\"let client of filteredClients\" (click)=\"goToClientDetails(client)\"> <!-- Updated iteration and class from project-card -->\r\n          <div class=\"card-header\">\r\n            <h3>{{ client.name }}</h3>\r\n            <div class=\"card-creation-date\">Créé le: {{ client.createdAt | date:'dd/MM/yyyy' }}</div> <!-- Adapted from card-dates -->\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p><strong>Email:</strong> {{ client.email }}</p>\r\n            <p><strong>Téléphone:</strong> {{ client.phone || 'N/A' }}</p>\r\n            <p><strong>Adresse:</strong> {{ client.address || 'N/A' }}</p>\r\n          </div>\r\n          <!-- Le footer de la carte peut être ajouté ici si nécessaire pour des actions spécifiques par carte -->\r\n        </div>\r\n         <div *ngIf=\"!filteredClients || filteredClients.length === 0\" style=\"grid-column: 1 / -1; text-align: center; padding: 20px; color: var(--text-color-secondary);\">\r\n          Aucun client trouvé. <!-- Updated text -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"
        }
    ]
}