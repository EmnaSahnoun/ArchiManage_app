{
    "sourceFile": "src/app/email-detail/email-detail.component.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1748712451576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748712499783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,1 @@\n-<div class=\"email-detail-container\" *ngIf=\"email\">\r\n-  <button mat-stroked-button (click)=\"goBack()\" class=\"back-button\">\r\n-    <mat-icon>arrow_back</mat-icon> Retour\r\n-  </button>\r\n-\r\n-  <header class=\"email-detail-header\">\r\n-    <h1>{{ email.headers?.subject || 'Pas de sujet' }}</h1>\r\n-    <div class=\"email-meta\">\r\n-      <p><strong>De:</strong> {{ email.headers?.from }}</p>\r\n-      <p><strong>À:</strong> {{ email.headers?.to }}</p>\r\n-      <p><strong>Date:</strong> {{ email.headers?.date | date:'fullDate' }} à {{ email.headers?.date | date:'shortTime' }}</p>\r\n-    </div>\r\n-  </header>\r\n-\r\n-  <div class=\"email-body-actions\">\r\n-    <!-- Vous pourriez ajouter des boutons d'action ici (Répondre, Transférer, etc.) -->\r\n-  </div>\r\n-\r\n-  <div class=\"email-body\">\r\n-    <!-- Afficher le corps de l'email. Gmail API fournit souvent le corps en HTML ou texte brut. -->\r\n-    <!-- Vous devrez peut-être traiter `email.payload.parts` ou `email.payload.body.data` (souvent encodé en base64url) -->\r\n-    <p>{{ email.snippet }}</p> <!-- Pour l'instant, affichons le snippet -->\r\n-    <hr>\r\n-    <p><em>(Contenu complet de l'email à implémenter ici. Vous devrez probablement décoder et afficher le corps de l'email qui peut être en HTML.)</em></p>\r\n-    <!-- Si le corps est en HTML et que vous faites confiance à la source : -->\r\n-    <!-- <div [innerHTML]=\"emailBodyHtml | safeHtml\"></div> -->\r\n-    <!-- safeHtml serait un Pipe personnalisé pour sanitizer le HTML -->\r\n-  </div>\r\n-</div>\r\n-\r\n-<div *ngIf=\"!email\" class=\"loading-or-error\">\r\n-  <p>Chargement des détails de l'email ou email non trouvé...</p>\r\n-  <button mat-stroked-button (click)=\"goBack()\">Retour à la liste</button>\r\n-</div>\r\n+<p>email-detail works!</p>\r\n"
                },
                {
                    "date": 1748712932909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,92 @@\n-<p>email-detail works!</p>\r\n+<div class=\"email-detail-container\">\r\n+  <header class=\"email-detail-header\">\r\n+    <button mat-icon-button (click)=\"goBack()\" aria-label=\"Retour à la liste des emails\">\r\n+      <mat-icon>arrow_back</mat-icon>\r\n+    </button>\r\n+    <h2>Détail de l'email</h2>\r\n+  </header>\r\n+\r\n+  <div *ngIf=\"isLoading\" class=\"loading-spinner\">\r\n+    <mat-spinner diameter=\"50\"></mat-spinner>\r\n+    <p>Chargement de l'email...</p>\r\n+  </div>\r\n+\r\n+  <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n+    <mat-icon>error_outline</mat-icon>\r\n+    <span>{{ error }}</span>\r\n+    <button mat-stroked-button color=\"warn\" (click)=\"loadEmailDetails(emailId!, currentUserEmail)\" *ngIf=\"emailId && currentUserEmail\">\r\n+      Réessayer\r\n+    </button>\r\n+  </div>\r\n+\r\n+  <div *ngIf=\"email && !isLoading && !error\" class=\"email-content-wrapper\">\r\n+    <div class=\"email-meta\">\r\n+      <div class=\"meta-item subject\">\r\n+        <h3>{{ email.headers?.subject || 'Sans Objet' }}</h3>\r\n+      </div>\r\n+      <div class=\"meta-grid\">\r\n+        <div class=\"meta-item\">\r\n+          <span class=\"meta-label\">De :</span>\r\n+          <span class=\"meta-value\" [title]=\"email.headers?.from\">{{ formatSenderRecipient(email.headers?.from) }}\r\n+            <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.from) !== extractEmailAddress(email.headers?.from)\">\r\n+              &lt;{{ extractEmailAddress(email.headers?.from) }}&gt;\r\n+            </span>\r\n+          </span>\r\n+        </div>\r\n+        <div class=\"meta-item\">\r\n+          <span class=\"meta-label\">À :</span>\r\n+          <span class=\"meta-value\" [title]=\"email.headers?.to\">{{ formatSenderRecipient(email.headers?.to) }}\r\n+             <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.to) !== extractEmailAddress(email.headers?.to)\">\r\n+              &lt;{{ extractEmailAddress(email.headers?.to) }}&gt;\r\n+            </span>\r\n+          </span>\r\n+        </div>\r\n+        <div class=\"meta-item\" *ngIf=\"email.headers?.cc\">\r\n+          <span class=\"meta-label\">Cc :</span>\r\n+          <span class=\"meta-value\" [title]=\"email.headers?.cc\">{{ formatSenderRecipient(email.headers?.cc) }}\r\n+            <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.cc) !== extractEmailAddress(email.headers?.cc)\">\r\n+              &lt;{{ extractEmailAddress(email.headers?.cc) }}&gt;\r\n+            </span>\r\n+          </span>\r\n+        </div>\r\n+        <div class=\"meta-item\" *ngIf=\"email.headers?.bcc\">\r\n+          <span class=\"meta-label\">Cci :</span>\r\n+          <span class=\"meta-value\" [title]=\"email.headers?.bcc\">{{ formatSenderRecipient(email.headers?.bcc) }}\r\n+             <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.bcc) !== extractEmailAddress(email.headers?.bcc)\">\r\n+              &lt;{{ extractEmailAddress(email.headers?.bcc) }}&gt;\r\n+            </span>\r\n+          </span>\r\n+        </div>\r\n+        <div class=\"meta-item date\">\r\n+          <span class=\"meta-label\">Date :</span>\r\n+          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' : '' : 'fr-FR' || 'Date inconnue' }}</span>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <mat-divider></mat-divider>\r\n+\r\n+    <div class=\"email-body\" [innerHTML]=\"getSafeHtml(email.bodyHtml || email.bodyText || email.snippet)\">\r\n+    </div>\r\n+    \r\n+    <div *ngIf=\"!email.bodyHtml && !email.bodyText && !email.snippet\" class=\"empty-body-message\">\r\n+        Aucun contenu de message disponible.\r\n+    </div>\r\n+\r\n+\r\n+    <div *ngIf=\"email.attachments && email.attachments.length > 0\" class=\"email-attachments\">\r\n+      <mat-divider></mat-divider>\r\n+      <h4>Pièces jointes ({{email.attachments.length}})</h4>\r\n+      <ul>\r\n+        <li *ngFor=\"let attachment of email.attachments\">\r\n+          <mat-icon class=\"attachment-icon\">attach_file</mat-icon>\r\n+          <span class=\"attachment-filename\">{{ attachment.filename }}</span>\r\n+          <span class=\"attachment-size\">({{ attachment.size | number }} octets)</span>\r\n+          <button mat-icon-button (click)=\"downloadAttachment(attachment)\" [attr.aria-label]=\"'Télécharger ' + attachment.filename\">\r\n+            <mat-icon>download</mat-icon>\r\n+          </button>\r\n+        </li>\r\n+      </ul>\r\n+    </div>\r\n+  </div>\r\n+</div>\r\n"
                },
                {
                    "date": 1748712953409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n   <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n     <mat-icon>error_outline</mat-icon>\r\n     <span>{{ error }}</span>\r\n-    <button mat-stroked-button color=\"warn\" (click)=\"loadEmailDetails(emailId!, currentUserEmail)\" *ngIf=\"emailId && currentUserEmail\">\r\n+    <button mat-stroked-button color=\"warn\"  *ngIf=\"emailId && currentUserEmail\">\r\n       Réessayer\r\n     </button>\r\n   </div>\r\n \r\n"
                },
                {
                    "date": 1748712966829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n   <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n     <mat-icon>error_outline</mat-icon>\r\n     <span>{{ error }}</span>\r\n-    <button mat-stroked-button color=\"warn\"  *ngIf=\"emailId && currentUserEmail\">\r\n+    <button mat-stroked-button color=\"warn\" >\r\n       Réessayer\r\n     </button>\r\n   </div>\r\n \r\n@@ -58,9 +58,9 @@\n           </span>\r\n         </div>\r\n         <div class=\"meta-item date\">\r\n           <span class=\"meta-label\">Date :</span>\r\n-          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' : '' : 'fr-FR' || 'Date inconnue' }}</span>\r\n+          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm'  }}</span>\r\n         </div>\r\n       </div>\r\n     </div>\r\n \r\n"
                },
                {
                    "date": 1748712994535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n   <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n     <mat-icon>error_outline</mat-icon>\r\n     <span>{{ error }}</span>\r\n-    <button mat-stroked-button color=\"warn\" >\r\n+    <button mat-stroked-button color=\"warn\"  *ngIf=\"emailId && currentUserEmail\">\r\n       Réessayer\r\n     </button>\r\n   </div>\r\n \r\n@@ -58,9 +58,9 @@\n           </span>\r\n         </div>\r\n         <div class=\"meta-item date\">\r\n           <span class=\"meta-label\">Date :</span>\r\n-          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm'  }}</span>\r\n+          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' : '' : 'fr-FR' || 'Date inconnue' }}</span>\r\n         </div>\r\n       </div>\r\n     </div>\r\n \r\n"
                },
                {
                    "date": 1748713014226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n   <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n     <mat-icon>error_outline</mat-icon>\r\n     <span>{{ error }}</span>\r\n-    <button mat-stroked-button color=\"warn\"  *ngIf=\"emailId && currentUserEmail\">\r\n+    <button mat-stroked-button color=\"warn\" >\r\n       Réessayer\r\n     </button>\r\n   </div>\r\n \r\n@@ -58,9 +58,9 @@\n           </span>\r\n         </div>\r\n         <div class=\"meta-item date\">\r\n           <span class=\"meta-label\">Date :</span>\r\n-          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' : '' : 'fr-FR' || 'Date inconnue' }}</span>\r\n+          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' }}</span>\r\n         </div>\r\n       </div>\r\n     </div>\r\n \r\n"
                },
                {
                    "date": 1748713133731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +0,0 @@\n-<div class=\"email-detail-container\">\r\n-  <header class=\"email-detail-header\">\r\n-    <button mat-icon-button (click)=\"goBack()\" aria-label=\"Retour à la liste des emails\">\r\n-      <mat-icon>arrow_back</mat-icon>\r\n-    </button>\r\n-    <h2>Détail de l'email</h2>\r\n-  </header>\r\n-\r\n-  <div *ngIf=\"isLoading\" class=\"loading-spinner\">\r\n-    <mat-spinner diameter=\"50\"></mat-spinner>\r\n-    <p>Chargement de l'email...</p>\r\n-  </div>\r\n-\r\n-  <div *ngIf=\"error && !isLoading\" class=\"error-message\">\r\n-    <mat-icon>error_outline</mat-icon>\r\n-    <span>{{ error }}</span>\r\n-    <button mat-stroked-button color=\"warn\" >\r\n-      Réessayer\r\n-    </button>\r\n-  </div>\r\n-\r\n-  <div *ngIf=\"email && !isLoading && !error\" class=\"email-content-wrapper\">\r\n-    <div class=\"email-meta\">\r\n-      <div class=\"meta-item subject\">\r\n-        <h3>{{ email.headers?.subject || 'Sans Objet' }}</h3>\r\n-      </div>\r\n-      <div class=\"meta-grid\">\r\n-        <div class=\"meta-item\">\r\n-          <span class=\"meta-label\">De :</span>\r\n-          <span class=\"meta-value\" [title]=\"email.headers?.from\">{{ formatSenderRecipient(email.headers?.from) }}\r\n-            <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.from) !== extractEmailAddress(email.headers?.from)\">\r\n-              &lt;{{ extractEmailAddress(email.headers?.from) }}&gt;\r\n-            </span>\r\n-          </span>\r\n-        </div>\r\n-        <div class=\"meta-item\">\r\n-          <span class=\"meta-label\">À :</span>\r\n-          <span class=\"meta-value\" [title]=\"email.headers?.to\">{{ formatSenderRecipient(email.headers?.to) }}\r\n-             <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.to) !== extractEmailAddress(email.headers?.to)\">\r\n-              &lt;{{ extractEmailAddress(email.headers?.to) }}&gt;\r\n-            </span>\r\n-          </span>\r\n-        </div>\r\n-        <div class=\"meta-item\" *ngIf=\"email.headers?.cc\">\r\n-          <span class=\"meta-label\">Cc :</span>\r\n-          <span class=\"meta-value\" [title]=\"email.headers?.cc\">{{ formatSenderRecipient(email.headers?.cc) }}\r\n-            <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.cc) !== extractEmailAddress(email.headers?.cc)\">\r\n-              &lt;{{ extractEmailAddress(email.headers?.cc) }}&gt;\r\n-            </span>\r\n-          </span>\r\n-        </div>\r\n-        <div class=\"meta-item\" *ngIf=\"email.headers?.bcc\">\r\n-          <span class=\"meta-label\">Cci :</span>\r\n-          <span class=\"meta-value\" [title]=\"email.headers?.bcc\">{{ formatSenderRecipient(email.headers?.bcc) }}\r\n-             <span class=\"meta-email-address\" *ngIf=\"formatSenderRecipient(email.headers?.bcc) !== extractEmailAddress(email.headers?.bcc)\">\r\n-              &lt;{{ extractEmailAddress(email.headers?.bcc) }}&gt;\r\n-            </span>\r\n-          </span>\r\n-        </div>\r\n-        <div class=\"meta-item date\">\r\n-          <span class=\"meta-label\">Date :</span>\r\n-          <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm' }}</span>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <mat-divider></mat-divider>\r\n-\r\n-    <div class=\"email-body\" [innerHTML]=\"getSafeHtml(email.bodyHtml || email.bodyText || email.snippet)\">\r\n-    </div>\r\n-    \r\n-    <div *ngIf=\"!email.bodyHtml && !email.bodyText && !email.snippet\" class=\"empty-body-message\">\r\n-        Aucun contenu de message disponible.\r\n-    </div>\r\n-\r\n-\r\n-    <div *ngIf=\"email.attachments && email.attachments.length > 0\" class=\"email-attachments\">\r\n-      <mat-divider></mat-divider>\r\n-      <h4>Pièces jointes ({{email.attachments.length}})</h4>\r\n-      <ul>\r\n-        <li *ngFor=\"let attachment of email.attachments\">\r\n-          <mat-icon class=\"attachment-icon\">attach_file</mat-icon>\r\n-          <span class=\"attachment-filename\">{{ attachment.filename }}</span>\r\n-          <span class=\"attachment-size\">({{ attachment.size | number }} octets)</span>\r\n-          <button mat-icon-button (click)=\"downloadAttachment(attachment)\" [attr.aria-label]=\"'Télécharger ' + attachment.filename\">\r\n-            <mat-icon>download</mat-icon>\r\n-          </button>\r\n-        </li>\r\n-      </ul>\r\n-    </div>\r\n-  </div>\r\n-</div>\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1748713504601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,80 @@\n-\n+<div class=\"email-detail-page\" *ngIf=\"!isLoading && !error && email\">\r\n+  <header class=\"email-detail-header\">\r\n+    <button mat-icon-button (click)=\"goBack()\" class=\"back-button\" aria-label=\"Retour à la liste des emails\">\r\n+      <mat-icon>arrow_back</mat-icon>\r\n+    </button>\r\n+    <h1 class=\"email-subject\">{{ email.headers?.subject || 'Pas de sujet' }}</h1>\r\n+    <div class=\"email-actions\">\r\n+      <button mat-icon-button (click)=\"onReply()\" aria-label=\"Répondre\" matTooltip=\"Répondre\">\r\n+        <mat-icon>reply</mat-icon>\r\n+      </button>\r\n+      <button mat-icon-button (click)=\"onForward()\" aria-label=\"Transférer\" matTooltip=\"Transférer\">\r\n+        <mat-icon>forward</mat-icon>\r\n+      </button>\r\n+      <button mat-icon-button color=\"warn\" (click)=\"onDelete()\" aria-label=\"Supprimer cet email\" matTooltip=\"Supprimer\">\r\n+        <mat-icon>delete</mat-icon>\r\n+      </button>\r\n+    </div>\r\n+  </header>\r\n+\r\n+  <mat-divider></mat-divider>\r\n+\r\n+  <div class=\"email-meta-container\">\r\n+    <div class=\"email-meta-row\">\r\n+      <strong class=\"meta-label\">De :</strong>\r\n+      <span class=\"meta-value\">{{ getSender() }}</span>\r\n+    </div>\r\n+    <div class=\"email-meta-row\">\r\n+      <strong class=\"meta-label\">À :</strong>\r\n+      <span class=\"meta-value\">{{ getRecipients() }}</span>\r\n+    </div>\r\n+    <div class=\"email-meta-row\" *ngIf=\"getCc()\">\r\n+      <strong class=\"meta-label\">Cc :</strong>\r\n+      <span class=\"meta-value\">{{ getCc() }}</span>\r\n+    </div>\r\n+    <div class=\"email-meta-row\">\r\n+      <strong class=\"meta-label\">Date :</strong>\r\n+      <span class=\"meta-value\">{{ email.headers?.date | date:'dd/MM/yyyy HH:mm':'':'fr' }}</span>\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <mat-divider></mat-divider>\r\n+\r\n+  <div class=\"email-body-container\">\r\n+    <div [innerHTML]=\"emailHtmlBody\" class=\"email-body-content\"></div>\r\n+  </div>\r\n+\r\n+  <div *ngIf=\"email.attachments && email.attachments.length > 0\" class=\"email-attachments-container\">\r\n+    <mat-divider></mat-divider>\r\n+    <h3>Pièces jointes ({{ email.attachments.length }})</h3>\r\n+    <ul class=\"attachments-list\">\r\n+      <li *ngFor=\"let attachment of email.attachments\" class=\"attachment-item\">\r\n+        <mat-icon class=\"attachment-icon\">attach_file</mat-icon>\r\n+        <span class=\"attachment-filename\">{{ attachment.filename }}</span>\r\n+        <span class=\"attachment-size\" *ngIf=\"attachment.size\">({{ attachment.size | number }} bytes)</span>\r\n+        <!-- Vous pouvez ajouter un bouton de téléchargement ici si votre backend le gère -->\r\n+        <!-- <button mat-icon-button (click)=\"downloadAttachment(attachment)\" aria-label=\"Télécharger la pièce jointe\">\r\n+          <mat-icon>download</mat-icon>\r\n+        </button> -->\r\n+      </li>\r\n+    </ul>\r\n+  </div>\r\n+</div>\r\n+\r\n+<div *ngIf=\"isLoading\" class=\"loading-spinner-detail\">\r\n+  <mat-spinner diameter=\"50\"></mat-spinner>\r\n+  <p>Chargement de l'email...</p>\r\n+</div>\r\n+\r\n+<div *ngIf=\"!isLoading && error\" class=\"error-message-detail\">\r\n+  <mat-icon color=\"warn\">error_outline</mat-icon>\r\n+  <p>{{ error }}</p>\r\n+  <button mat-stroked-button color=\"primary\" (click)=\"goBack()\">Retour</button>\r\n+  <button mat-stroked-button color=\"accent\" *ngIf=\"emailId && !email && !emailDataInput\" (click)=\"fetchEmailDetails(emailId!)\">Réessayer</button>\r\n+</div>\r\n+\r\n+<div *ngIf=\"!isLoading && !email && !error\" class=\"no-email-selected\">\r\n+    <mat-icon>email</mat-icon>\r\n+    <p>Aucun email sélectionné ou détails non disponibles.</p>\r\n+    <button mat-stroked-button color=\"primary\" (click)=\"goBack()\">Retour à la boîte de réception</button>\r\n+</div>\r\n"
                },
                {
                    "date": 1748713512395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n <div *ngIf=\"!isLoading && error\" class=\"error-message-detail\">\r\n   <mat-icon color=\"warn\">error_outline</mat-icon>\r\n   <p>{{ error }}</p>\r\n   <button mat-stroked-button color=\"primary\" (click)=\"goBack()\">Retour</button>\r\n-  <button mat-stroked-button color=\"accent\" *ngIf=\"emailId && !email && !emailDataInput\" (click)=\"fetchEmailDetails(emailId!)\">Réessayer</button>\r\n+  <button mat-stroked-button color=\"accent\" *ngIf=\"emailId && !email && !emailDataInput\" >Réessayer</button>\r\n </div>\r\n \r\n <div *ngIf=\"!isLoading && !email && !error\" class=\"no-email-selected\">\r\n     <mat-icon>email</mat-icon>\r\n"
                }
            ],
            "date": 1748712451576,
            "name": "Commit-0",
            "content": "<div class=\"email-detail-container\" *ngIf=\"email\">\r\n  <button mat-stroked-button (click)=\"goBack()\" class=\"back-button\">\r\n    <mat-icon>arrow_back</mat-icon> Retour\r\n  </button>\r\n\r\n  <header class=\"email-detail-header\">\r\n    <h1>{{ email.headers?.subject || 'Pas de sujet' }}</h1>\r\n    <div class=\"email-meta\">\r\n      <p><strong>De:</strong> {{ email.headers?.from }}</p>\r\n      <p><strong>À:</strong> {{ email.headers?.to }}</p>\r\n      <p><strong>Date:</strong> {{ email.headers?.date | date:'fullDate' }} à {{ email.headers?.date | date:'shortTime' }}</p>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"email-body-actions\">\r\n    <!-- Vous pourriez ajouter des boutons d'action ici (Répondre, Transférer, etc.) -->\r\n  </div>\r\n\r\n  <div class=\"email-body\">\r\n    <!-- Afficher le corps de l'email. Gmail API fournit souvent le corps en HTML ou texte brut. -->\r\n    <!-- Vous devrez peut-être traiter `email.payload.parts` ou `email.payload.body.data` (souvent encodé en base64url) -->\r\n    <p>{{ email.snippet }}</p> <!-- Pour l'instant, affichons le snippet -->\r\n    <hr>\r\n    <p><em>(Contenu complet de l'email à implémenter ici. Vous devrez probablement décoder et afficher le corps de l'email qui peut être en HTML.)</em></p>\r\n    <!-- Si le corps est en HTML et que vous faites confiance à la source : -->\r\n    <!-- <div [innerHTML]=\"emailBodyHtml | safeHtml\"></div> -->\r\n    <!-- safeHtml serait un Pipe personnalisé pour sanitizer le HTML -->\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!email\" class=\"loading-or-error\">\r\n  <p>Chargement des détails de l'email ou email non trouvé...</p>\r\n  <button mat-stroked-button (click)=\"goBack()\">Retour à la liste</button>\r\n</div>\r\n"
        }
    ]
}