{
    "sourceFile": "src/app/set-password/set-password.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747957749629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747957754839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { Component } from '@angular/core';\r\n+import { FormBuilder } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'app-set-password',\r\n   templateUrl: './set-password.component.html',\r\n"
                },
                {
                    "date": 1747957760278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import { Component } from '@angular/core';\r\n-import { FormBuilder } from '@angular/forms';\r\n+import { Component, Input } from '@angular/core';\r\n+import { FormBuilder, FormGroup } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'app-set-password',\r\n   templateUrl: './set-password.component.html',\r\n"
                },
                {
                    "date": 1747957767338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import { Component, Input } from '@angular/core';\r\n-import { FormBuilder, FormGroup } from '@angular/forms';\r\n+import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n+import { CommercialService } from '../services/commercial.service';\r\n \r\n @Component({\r\n   selector: 'app-set-password',\r\n   templateUrl: './set-password.component.html',\r\n"
                }
            ],
            "date": 1747957749629,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-set-password',\r\n  templateUrl: './set-password.component.html',\r\n  styleUrl: './set-password.component.scss'\r\n})\r\nexport class SetPasswordComponent {\r\n@Input() clientId!: string; // L'ID du client pour lequel définir le mot de passe\r\n  @Input() clientName!: string; // Le nom du client pour l'affichage\r\n\r\n  passwordForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage: string | null = null;\r\n  successMessage: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public activeModal: NgbActiveModal,\r\n    private commercialService: CommercialService\r\n  ) {\r\n    this.passwordForm = this.fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]] // Exemple: mot de passe d'au moins 8 caractères\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.clientId) {\r\n      this.errorMessage = \"ID du client non fourni.\";\r\n      // Optionnellement, fermer le modal ou désactiver le formulaire\r\n    }\r\n  }\r\n\r\n  get password() { return this.passwordForm.get('password'); }\r\n\r\n  setPassword(): void {\r\n    if (this.passwordForm.invalid || this.isLoading) {\r\n      this.passwordForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = null;\r\n    this.successMessage = null;\r\n\r\n    const newPasswordValue = this.password?.value;\r\n\r\n    // La structure du payload peut varier selon l'API Keycloak\r\n    const passwordDetails = {\r\n      type: 'password',\r\n      temporary: false, // Mettre à true si le mot de passe doit être changé à la prochaine connexion\r\n      value: newPasswordValue\r\n    };\r\n\r\n    this.commercialService.setKeycloakPassword(this.clientId, passwordDetails).subscribe({\r\n      next: () => {\r\n        this.isLoading = false;\r\n        this.successMessage = `Le mot de passe pour ${this.clientName} a été défini avec succès.`;\r\n        // Fermer le modal après un court délai pour afficher le message de succès\r\n        setTimeout(() => {\r\n          this.activeModal.close('success');\r\n        }, 2000);\r\n      },\r\n      error: (err) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = err.error?.errorMessage || err.message || 'Une erreur est survenue lors de la définition du mot de passe.';\r\n        console.error('Erreur définition mot de passe:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss('cancel click');\r\n  }\r\n}\r\n"
        }
    ]
}