{
    "sourceFile": "src/app/google-callback/google-callback.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 55,
            "patches": [
                {
                    "date": 1748598260835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748598278166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,6 +6,35 @@\n   styleUrl: './google-callback.component.scss'\r\n })\r\n export class GoogleCallbackComponent {\r\n \r\n-  \r\n+  implements OnInit {\r\n+  constructor(\r\n+    private route: ActivatedRoute,\r\n+    private authService: AuthService,\r\n+    private http: HttpClient\r\n+  ) {}\r\n+\r\n+  async ngOnInit() {\r\n+    const code = this.route.snapshot.queryParamMap.get('code');\r\n+    \r\n+    if (code) {\r\n+      try {\r\n+        // Échanger le code contre un token\r\n+        const tokenResponse = await this.http.post<any>(\r\n+          'http://e8.systeo.tn/auth/google/callback', \r\n+          { code },\r\n+          { headers: { 'Content-Type': 'application/json' } }\r\n+        ).toPromise();\r\n+\r\n+        // Stocker le token Google\r\n+        this.authService.setGoogleAccessToken(tokenResponse.access_token);\r\n+        \r\n+        // Rediriger vers la page précédente ou la page par défaut\r\n+        window.location.href = '/mail'; // Adaptez selon votre route\r\n+      } catch (error) {\r\n+        console.error('Erreur lors de l\\'authentification Google', error);\r\n+        window.location.href = '/error'; // Page d'erreur\r\n+      }\r\n+    }\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1748598284925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   selector: 'app-google-callback',\r\n   templateUrl: './google-callback.component.html',\r\n   styleUrl: './google-callback.component.scss'\r\n })\r\n-export class GoogleCallbackComponent {\r\n+export class GoogleCallbackComponent \r\n \r\n   implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n"
                },
                {
                    "date": 1748598291590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,12 @@\n-import { Component } from '@angular/core';\r\n+import { Component, OnInit } from '@angular/core';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n   templateUrl: './google-callback.component.html',\r\n   styleUrl: './google-callback.component.scss'\r\n })\r\n-export class GoogleCallbackComponent \r\n-\r\n-  implements OnInit {\r\n+export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private authService: AuthService,\r\n     private http: HttpClient\r\n"
                },
                {
                    "date": 1748598297613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import { Component, OnInit } from '@angular/core';\r\n+import { AuthService } from '../services/auth.service';\r\n+import { ActivatedRoute } from '@angular/router';\r\n+import { HttpClient } from '@angular/common/http';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n   templateUrl: './google-callback.component.html',\r\n"
                },
                {
                    "date": 1748598307049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     if (code) {\r\n       try {\r\n         // Échanger le code contre un token\r\n         const tokenResponse = await this.http.post<any>(\r\n-          'http://e8.systeo.tn/auth/google/callback', \r\n+          'https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748598332867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,9 @@\n import { HttpClient } from '@angular/common/http';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n-  templateUrl: './google-callback.component.html',\r\n-  styleUrl: './google-callback.component.scss'\r\n+  template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n"
                },
                {
                    "date": 1748598377507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // Stocker le token Google\r\n         this.authService.setGoogleAccessToken(tokenResponse.access_token);\r\n         \r\n         // Rediriger vers la page précédente ou la page par défaut\r\n-        window.location.href = '/mail'; // Adaptez selon votre route\r\n+        window.location.href = '/email'; // Adaptez selon votre route\r\n       } catch (error) {\r\n         console.error('Erreur lors de l\\'authentification Google', error);\r\n         window.location.href = '/error'; // Page d'erreur\r\n       }\r\n"
                },
                {
                    "date": 1748599132700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n-    private authService: AuthService,\r\n+    private googleA: AuthService,\r\n     private http: HttpClient\r\n   ) {}\r\n \r\n   async ngOnInit() {\r\n@@ -29,9 +29,9 @@\n         // Stocker le token Google\r\n         this.authService.setGoogleAccessToken(tokenResponse.access_token);\r\n         \r\n         // Rediriger vers la page précédente ou la page par défaut\r\n-        window.location.href = '/email'; // Adaptez selon votre route\r\n+        window.location.href = '/emails'; // Adaptez selon votre route\r\n       } catch (error) {\r\n         console.error('Erreur lors de l\\'authentification Google', error);\r\n         window.location.href = '/error'; // Page d'erreur\r\n       }\r\n"
                },
                {
                    "date": 1748599140309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n-    private googleA: AuthService,\r\n+    private googleAuthService: Googl,\r\n     private http: HttpClient\r\n   ) {}\r\n \r\n   async ngOnInit() {\r\n"
                },
                {
                    "date": 1748599147432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n import { Component, OnInit } from '@angular/core';\r\n import { AuthService } from '../services/auth.service';\r\n import { ActivatedRoute } from '@angular/router';\r\n import { HttpClient } from '@angular/common/http';\r\n+import { GoogleAuthService } from '../services/googleAuthSerivce';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n-    private googleAuthService: Googl,\r\n+    private googleAuthService: GoogleAuthService,\r\n     private http: HttpClient\r\n   ) {}\r\n \r\n   async ngOnInit() {\r\n@@ -26,9 +27,9 @@\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n         // Stocker le token Google\r\n-        this.authService.setGoogleAccessToken(tokenResponse.access_token);\r\n+        this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n         \r\n         // Rediriger vers la page précédente ou la page par défaut\r\n         window.location.href = '/emails'; // Adaptez selon votre route\r\n       } catch (error) {\r\n"
                },
                {
                    "date": 1748600028006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n-    private http: HttpClient\r\n+    private http: HttpClient,\r\n+    private router: Router\r\n   ) {}\r\n \r\n   async ngOnInit() {\r\n     const code = this.route.snapshot.queryParamMap.get('code');\r\n"
                },
                {
                    "date": 1748600040970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Component, OnInit } from '@angular/core';\r\n import { AuthService } from '../services/auth.service';\r\n-import { ActivatedRoute } from '@angular/router';\r\n+import { ActivatedRoute, Router } from '@angular/router';\r\n import { HttpClient } from '@angular/common/http';\r\n import { GoogleAuthService } from '../services/googleAuthSerivce';\r\n \r\n @Component({\r\n@@ -17,9 +17,9 @@\n   ) {}\r\n \r\n   async ngOnInit() {\r\n     const code = this.route.snapshot.queryParamMap.get('code');\r\n-    \r\n+    const error = this.route.snapshot.queryParamMap.get('error');\r\n     if (code) {\r\n       try {\r\n         // Échanger le code contre un token\r\n         const tokenResponse = await this.http.post<any>(\r\n"
                },
                {
                    "date": 1748600054065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,14 @@\n \r\n   async ngOnInit() {\r\n     const code = this.route.snapshot.queryParamMap.get('code');\r\n     const error = this.route.snapshot.queryParamMap.get('error');\r\n+    if (error) {\r\n+      console.error('Erreur lors de l\\'authentification Google:', error);\r\n+      this.router.navigate(['/error']);\r\n+      return;\r\n+    }\r\n+\r\n     if (code) {\r\n       try {\r\n         // Échanger le code contre un token\r\n         const tokenResponse = await this.http.post<any>(\r\n"
                },
                {
                    "date": 1748600071816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,23 +26,24 @@\n     }\r\n \r\n     if (code) {\r\n       try {\r\n-        // Échanger le code contre un token\r\n         const tokenResponse = await this.http.post<any>(\r\n           'https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n-        // Stocker le token Google\r\n         this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n         \r\n-        // Rediriger vers la page précédente ou la page par défaut\r\n-        window.location.href = '/emails'; // Adaptez selon votre route\r\n+        // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n+        const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+        this.router.navigateByUrl(returnUrl);\r\n       } catch (error) {\r\n         console.error('Erreur lors de l\\'authentification Google', error);\r\n-        window.location.href = '/error'; // Page d'erreur\r\n+        this.router.navigate(['/error']);\r\n       }\r\n+    } else {\r\n+      this.router.navigate(['/']);\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1748604831387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n+  \r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n     private http: HttpClient,\r\n"
                },
                {
                    "date": 1748604837197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n-  \r\n+  apiUrl\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n     private http: HttpClient,\r\n"
                },
                {
                    "date": 1748604845018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,10 @@\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n-  apiUrl\r\n+  apiUrl = '/';\r\n+\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n     private http: HttpClient,\r\n"
                },
                {
                    "date": 1748604861988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n-  apiUrl = '/';\r\n+  apiUrl = '/email';\r\n \r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n@@ -28,9 +28,9 @@\n     }\r\n \r\n     if (code) {\r\n       try {\r\n-        const tokenResponse = await this.http.post<any>(\r\n+        const tokenResponse = await this.http.post<any>({}\r\n           'https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n"
                },
                {
                    "date": 1748604870612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     }\r\n \r\n     if (code) {\r\n       try {\r\n-        const tokenResponse = await this.http.post<any>({}\r\n+        const tokenResponse = await this.http.post<any>({$this}\r\n           'https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n"
                },
                {
                    "date": 1748604879179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n     }\r\n \r\n     if (code) {\r\n       try {\r\n-        const tokenResponse = await this.http.post<any>({$this}\r\n+        const tokenResponse = await this.http.post<any>(\r\n+          {$this.apiUrl}\r\n           'https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n"
                },
                {
                    "date": 1748604888676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,9 @@\n \r\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n-          {$this.apiUrl}\r\n-          'https://e8.systeo.tn/auth/google/callback', \r\n+          '{$this.apiUrl}https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748604894091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n \r\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n-          '{$this.apiUrl}https://e8.systeo.tn/auth/google/callback', \r\n+          '{$this.apiUrl}/auth/google/callback', \r\n+          https://e8.systeo.tn/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748604900410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n           '{$this.apiUrl}/auth/google/callback', \r\n-          https://e8.systeo.tn/auth/google/callback', \r\n+        \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748605155418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n-  apiUrl = '/email';\r\n \r\n+\r\n   constructor(\r\n     private route: ActivatedRoute,\r\n     private googleAuthService: GoogleAuthService,\r\n     private http: HttpClient,\r\n@@ -30,9 +30,8 @@\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n           '{$this.apiUrl}/auth/google/callback', \r\n-        \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748605176482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,12 @@\n       console.error('Erreur lors de l\\'authentification Google:', error);\r\n       this.router.navigate(['/error']);\r\n       return;\r\n     }\r\n-\r\n+ if (!code) {\r\n+      await this.router.navigate(['/']);\r\n+      return;\r\n+    }\r\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n           '{$this.apiUrl}/auth/google/callback', \r\n"
                },
                {
                    "date": 1748605187961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     }\r\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n-          '{$this.apiUrl}/auth/google/callback', \r\n+          '/ema/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n \r\n"
                },
                {
                    "date": 1748605209697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,15 @@\n     }\r\n     if (code) {\r\n       try {\r\n         const tokenResponse = await this.http.post<any>(\r\n-          '/ema/auth/google/callback', \r\n+          '/email/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n-\r\n+if (!tokenResponse?.access_token) {\r\n+        throw new Error('No access token in response');\r\n+      }\r\n         this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n         \r\n         // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n         const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n"
                },
                {
                    "date": 1748605238867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,13 +36,15 @@\n           '/email/auth/google/callback', \r\n           { code },\r\n           { headers: { 'Content-Type': 'application/json' } }\r\n         ).toPromise();\r\n-if (!tokenResponse?.access_token) {\r\n+      if (!tokenResponse?.access_token) {\r\n         throw new Error('No access token in response');\r\n       }\r\n         this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n-        \r\n+        await new Promise(resolve => setTimeout(resolve, 100));\r\n+      \r\n+      const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n         // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n         const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n         this.router.navigateByUrl(returnUrl);\r\n       } catch (error) {\r\n"
                },
                {
                    "date": 1748605247984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,8 @@\n         throw new Error('No access token in response');\r\n       }\r\n         this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n         await new Promise(resolve => setTimeout(resolve, 100));\r\n-      \r\n-      const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n         // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n         const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n         this.router.navigateByUrl(returnUrl);\r\n       } catch (error) {\r\n"
                },
                {
                    "date": 1748605263214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n         await new Promise(resolve => setTimeout(resolve, 100));\r\n         // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n         const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-        this.router.navigateByUrl(returnUrl);\r\n+         await  this.router.navigateByUrl(returnUrl);\r\n       } catch (error) {\r\n         console.error('Erreur lors de l\\'authentification Google', error);\r\n         this.router.navigate(['/error']);\r\n       }\r\n"
                },
                {
                    "date": 1748606584399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,40 +17,43 @@\n     private http: HttpClient,\r\n     private router: Router\r\n   ) {}\r\n \r\n-  async ngOnInit() {\r\n+   async ngOnInit() {\r\n     const code = this.route.snapshot.queryParamMap.get('code');\r\n     const error = this.route.snapshot.queryParamMap.get('error');\r\n+    \r\n     if (error) {\r\n       console.error('Erreur lors de l\\'authentification Google:', error);\r\n-      this.router.navigate(['/error']);\r\n+      await this.router.navigate(['/error']);\r\n       return;\r\n     }\r\n- if (!code) {\r\n+\r\n+    if (!code) {\r\n       await this.router.navigate(['/']);\r\n       return;\r\n     }\r\n-    if (code) {\r\n-      try {\r\n-        const tokenResponse = await this.http.post<any>(\r\n-          '/email/auth/google/callback', \r\n-          { code },\r\n-          { headers: { 'Content-Type': 'application/json' } }\r\n-        ).toPromise();\r\n+\r\n+    try {\r\n+      const tokenResponse = await this.http.post<any>(\r\n+        '/email/auth/google/callback', \r\n+        { code },\r\n+        { headers: { 'Content-Type': 'application/json' } }\r\n+      ).toPromise();\r\n+\r\n       if (!tokenResponse?.access_token) {\r\n         throw new Error('No access token in response');\r\n       }\r\n-        this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n-        await new Promise(resolve => setTimeout(resolve, 100));\r\n-        // Rediriger vers l'URL sauvegardée ou vers /emails par défaut\r\n-        const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-         await  this.router.navigateByUrl(returnUrl);\r\n-      } catch (error) {\r\n-        console.error('Erreur lors de l\\'authentification Google', error);\r\n-        this.router.navigate(['/error']);\r\n-      }\r\n-    } else {\r\n-      this.router.navigate(['/']);\r\n+\r\n+      this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n+      \r\n+      // Récupérer l'URL de retour et nettoyer le stockage\r\n+      const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+      \r\n+      // Rediriger vers l'URL sauvegardée ou /emails par défaut\r\n+      await this.router.navigateByUrl(returnUrl);\r\n+    } catch (error) {\r\n+      console.error('Erreur lors de l\\'authentification Google', error);\r\n+      await this.router.navigate(['/error']);\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1748611946580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,21 +39,19 @@\n         { code },\r\n         { headers: { 'Content-Type': 'application/json' } }\r\n       ).toPromise();\r\n \r\n-      if (!tokenResponse?.access_token) {\r\n-        throw new Error('No access token in response');\r\n-      }\r\n-\r\n-      this.googleAuthService.setGoogleAccessToken(tokenResponse.access_token);\r\n-      \r\n-      // Récupérer l'URL de retour et nettoyer le stockage\r\n-      const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-      \r\n-      // Rediriger vers l'URL sauvegardée ou /emails par défaut\r\n-      await this.router.navigateByUrl(returnUrl);\r\n-    } catch (error) {\r\n-      console.error('Erreur lors de l\\'authentification Google', error);\r\n-      await this.router.navigate(['/error']);\r\n-    }\r\n+      if (tokenResponse?.access_token && tokenResponse.refresh_token) {\r\n+    this.googleAuthService.setTokens(\r\n+      tokenResponse.access_token,\r\n+      tokenResponse.refresh_token\r\n+    );\r\n+    const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+    await this.router.navigateByUrl(returnUrl);\r\n+  } else {\r\n+    throw new Error('Tokens manquants dans la réponse');\r\n   }\r\n+} catch (error) {\r\n+  console.error('Erreur d\\'authentification', error);\r\n+  await this.router.navigate(['/error']);\r\n }\r\n+}\r\n"
                },
                {
                    "date": 1748611981676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         { headers: { 'Content-Type': 'application/json' } }\r\n       ).toPromise();\r\n \r\n       if (tokenResponse?.access_token && tokenResponse.refresh_token) {\r\n-    this.googleAuthService.setTokens(\r\n+    this.googleAuthService.setGoogleAccessToken(\r\n       tokenResponse.access_token,\r\n       tokenResponse.refresh_token\r\n     );\r\n     const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n@@ -52,6 +52,6 @@\n   }\r\n } catch (error) {\r\n   console.error('Erreur d\\'authentification', error);\r\n   await this.router.navigate(['/error']);\r\n+}}\r\n }\r\n-}\r\n"
                },
                {
                    "date": 1748623445300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,40 +18,36 @@\n     private router: Router\r\n   ) {}\r\n \r\n    async ngOnInit() {\r\n-    const code = this.route.snapshot.queryParamMap.get('code');\r\n-    const error = this.route.snapshot.queryParamMap.get('error');\r\n-    \r\n-    if (error) {\r\n-      console.error('Erreur lors de l\\'authentification Google:', error);\r\n-      await this.router.navigate(['/error']);\r\n-      return;\r\n-    }\r\n+  // Récupère les tokens depuis l'URL (passés par le backend via redirection)\r\n+  const fragment = this.route.snapshot.fragment;\r\n+  const params = new URLSearchParams(fragment || '');\r\n+  \r\n+  const accessToken = params.get('access_token');\r\n+  const refreshToken = params.get('refresh_token');\r\n+  const error = params.get('error');\r\n \r\n-    if (!code) {\r\n-      await this.router.navigate(['/']);\r\n-      return;\r\n-    }\r\n+  if (error) {\r\n+    console.error('Erreur Google:', error);\r\n+    await this.router.navigate(['/error'], { \r\n+      queryParams: { message: 'google_auth_failed' }\r\n+    });\r\n+    return;\r\n+  }\r\n \r\n-    try {\r\n-      const tokenResponse = await this.http.post<any>(\r\n-        '/email/auth/google/callback', \r\n-        { code },\r\n-        { headers: { 'Content-Type': 'application/json' } }\r\n-      ).toPromise();\r\n+  if (!accessToken || !refreshToken) {\r\n+    console.error('Tokens manquants dans l\\'URL');\r\n+    await this.router.navigate(['/error'], {\r\n+      queryParams: { message: 'missing_tokens' }\r\n+    });\r\n+    return;\r\n+  }\r\n \r\n-      if (tokenResponse?.access_token && tokenResponse.refresh_token) {\r\n-    this.googleAuthService.setGoogleAccessToken(\r\n-      tokenResponse.access_token,\r\n-      tokenResponse.refresh_token\r\n-    );\r\n-    const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-    await this.router.navigateByUrl(returnUrl);\r\n-  } else {\r\n-    throw new Error('Tokens manquants dans la réponse');\r\n-  }\r\n-} catch (error) {\r\n-  console.error('Erreur d\\'authentification', error);\r\n-  await this.router.navigate(['/error']);\r\n-}}\r\n+  // Stocke les tokens\r\n+  this.googleAuthService.setGoogleAccessToken(accessToken, refreshToken);\r\n+  \r\n+  // Redirige vers l'URL sauvegardée ou /emails par défaut\r\n+  const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+  await this.router.navigateByUrl(returnUrl);\r\n }\r\n+}\r\n"
                },
                {
                    "date": 1748623564282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n   \r\n   const accessToken = params.get('access_token');\r\n   const refreshToken = params.get('refresh_token');\r\n   const error = params.get('error');\r\n-\r\n+console.log('Fragment URL:', window.location.href);\r\n+console.log('Access Token from URL:', accessToken);\r\n+console.log('Refresh Token from URL:', refreshToken);\r\n   if (error) {\r\n     console.error('Erreur Google:', error);\r\n     await this.router.navigate(['/error'], { \r\n       queryParams: { message: 'google_auth_failed' }\r\n"
                },
                {
                    "date": 1748624058448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,9 @@\n   \r\n   const accessToken = params.get('access_token');\r\n   const refreshToken = params.get('refresh_token');\r\n   const error = params.get('error');\r\n-console.log('Fragment URL:', window.location.href);\r\n-console.log('Access Token from URL:', accessToken);\r\n-console.log('Refresh Token from URL:', refreshToken);\r\n+\r\n   if (error) {\r\n     console.error('Erreur Google:', error);\r\n     await this.router.navigate(['/error'], { \r\n       queryParams: { message: 'google_auth_failed' }\r\n"
                },
                {
                    "date": 1748629074917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,37 +17,32 @@\n     private http: HttpClient,\r\n     private router: Router\r\n   ) {}\r\n \r\n-   async ngOnInit() {\r\n-  // Récupère les tokens depuis l'URL (passés par le backend via redirection)\r\n-  const fragment = this.route.snapshot.fragment;\r\n-  const params = new URLSearchParams(fragment || '');\r\n-  \r\n-  const accessToken = params.get('access_token');\r\n-  const refreshToken = params.get('refresh_token');\r\n-  const error = params.get('error');\r\n+   ngOnInit() {\r\n+  this.route.queryParams.subscribe(params => {\r\n+    const code = params['code'];\r\n+    const error = params['error'];\r\n \r\n-  if (error) {\r\n-    console.error('Erreur Google:', error);\r\n-    await this.router.navigate(['/error'], { \r\n-      queryParams: { message: 'google_auth_failed' }\r\n-    });\r\n-    return;\r\n-  }\r\n+    if (error) {\r\n+      this.router.navigate(['/error'], { queryParams: { error } });\r\n+      return;\r\n+    }\r\n \r\n-  if (!accessToken || !refreshToken) {\r\n-    console.error('Tokens manquants dans l\\'URL');\r\n-    await this.router.navigate(['/error'], {\r\n-      queryParams: { message: 'missing_tokens' }\r\n-    });\r\n-    return;\r\n-  }\r\n-\r\n-  // Stocke les tokens\r\n-  this.googleAuthService.setGoogleAccessToken(accessToken, refreshToken);\r\n-  \r\n-  // Redirige vers l'URL sauvegardée ou /emails par défaut\r\n-  const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-  await this.router.navigateByUrl(returnUrl);\r\n+    if (code) {\r\n+      this.googleAuthService.exchangeCodeForToken(code).subscribe({\r\n+        next: () => {\r\n+          const returnUrl = localStorage.getItem('google_auth_return_url') || '/emails';\r\n+          localStorage.removeItem('google_auth_return_url');\r\n+          this.router.navigateByUrl(returnUrl);\r\n+        },\r\n+        error: (err) => {\r\n+          console.error('Authentication failed', err);\r\n+          this.router.navigate(['/error']);\r\n+        }\r\n+      });\r\n+    } else {\r\n+      this.router.navigate(['/']);\r\n+    }\r\n+  });\r\n }\r\n }\r\n"
                },
                {
                    "date": 1748629330037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,19 +28,10 @@\n       return;\r\n     }\r\n \r\n     if (code) {\r\n-      this.googleAuthService.exchangeCodeForToken(code).subscribe({\r\n-        next: () => {\r\n-          const returnUrl = localStorage.getItem('google_auth_return_url') || '/emails';\r\n-          localStorage.removeItem('google_auth_return_url');\r\n-          this.router.navigateByUrl(returnUrl);\r\n-        },\r\n-        error: (err) => {\r\n-          console.error('Authentication failed', err);\r\n-          this.router.navigate(['/error']);\r\n-        }\r\n-      });\r\n+     \r\n+      \r\n     } else {\r\n       this.router.navigate(['/']);\r\n     }\r\n   });\r\n"
                },
                {
                    "date": 1748631111970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,23 +17,41 @@\n     private http: HttpClient,\r\n     private router: Router\r\n   ) {}\r\n \r\n-   ngOnInit() {\r\n-  this.route.queryParams.subscribe(params => {\r\n-    const code = params['code'];\r\n-    const error = params['error'];\r\n+   async ngOnInit() {\r\n+  const code = this.route.snapshot.queryParamMap.get('code');\r\n+  const error = this.route.snapshot.queryParamMap.get('error');\r\n \r\n-    if (error) {\r\n-      this.router.navigate(['/error'], { queryParams: { error } });\r\n-      return;\r\n-    }\r\n+  if (error) {\r\n+    console.error('Erreur Google:', error);\r\n+    await this.router.navigate(['/error'], { \r\n+      queryParams: { error: 'google_auth_failed' }\r\n+    });\r\n+    return;\r\n+  }\r\n \r\n-    if (code) {\r\n-     \r\n-      \r\n-    } else {\r\n-      this.router.navigate(['/']);\r\n-    }\r\n-  });\r\n+  if (!code) {\r\n+    await this.router.navigate(['/']);\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    await lastValueFrom(\r\n+      this.googleAuthService.exchangeCodeForToken(code).pipe(\r\n+        take(1)\r\n+      )\r\n+    );\r\n+    \r\n+    const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+    await this.router.navigateByUrl(returnUrl);\r\n+  } catch (err) {\r\n+    console.error('Erreur complète:', err);\r\n+    await this.router.navigate(['/error'], {\r\n+      queryParams: { \r\n+        message: 'token_exchange_failed',\r\n+        details: err.message \r\n+      }\r\n+    });\r\n+  }\r\n }\r\n }\r\n"
                },
                {
                    "date": 1748631119233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { AuthService } from '../services/auth.service';\r\n import { ActivatedRoute, Router } from '@angular/router';\r\n import { HttpClient } from '@angular/common/http';\r\n import { GoogleAuthService } from '../services/googleAuthSerivce';\r\n+import { lastValueFrom, take } from 'rxjs';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n   template: '<p>Authentification en cours...</p>'\r\n"
                },
                {
                    "date": 1748631131777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     console.error('Erreur complète:', err);\r\n     await this.router.navigate(['/error'], {\r\n       queryParams: { \r\n         message: 'token_exchange_failed',\r\n-        details: err.message \r\n+        details: err \r\n       }\r\n     });\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1748632005802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,40 +19,44 @@\n     private router: Router\r\n   ) {}\r\n \r\n    async ngOnInit() {\r\n-  const code = this.route.snapshot.queryParamMap.get('code');\r\n-  const error = this.route.snapshot.queryParamMap.get('error');\r\n+    const code = this.route.snapshot.queryParamMap.get('code');\r\n+    const error = this.route.snapshot.queryParamMap.get('error');\r\n+    \r\n+    if (error) {\r\n+      console.error('Erreur Google Auth:', error);\r\n+      await this.router.navigate(['/error'], { queryParams: { error } });\r\n+      return;\r\n+    }\r\n \r\n-  if (error) {\r\n-    console.error('Erreur Google:', error);\r\n-    await this.router.navigate(['/error'], { \r\n-      queryParams: { error: 'google_auth_failed' }\r\n-    });\r\n-    return;\r\n-  }\r\n+    if (!code) {\r\n+      await this.router.navigate(['/']);\r\n+      return;\r\n+    }\r\n \r\n-  if (!code) {\r\n-    await this.router.navigate(['/']);\r\n-    return;\r\n-  }\r\n+    try {\r\n+      const tokenResponse = await this.http.post<any>(\r\n+        '/email/auth/google/callback', \r\n+        { code }\r\n+      ).toPromise();\r\n \r\n-  try {\r\n-    await lastValueFrom(\r\n-      this.googleAuthService.exchangeCodeForToken(code).pipe(\r\n-        take(1)\r\n-      )\r\n-    );\r\n-    \r\n-    const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-    await this.router.navigateByUrl(returnUrl);\r\n-  } catch (err) {\r\n-    console.error('Erreur complète:', err);\r\n-    await this.router.navigate(['/error'], {\r\n-      queryParams: { \r\n-        message: 'token_exchange_failed',\r\n-        details: err \r\n+      if (tokenResponse?.access_token) {\r\n+        this.googleAuthService.setGoogleAccessToken(\r\n+          tokenResponse.access_token,\r\n+          tokenResponse.refresh_token\r\n+        );\r\n+        \r\n+        // Récupérer l'URL d'origine ou utiliser '/emails' par défaut\r\n+        const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n+        await this.router.navigateByUrl(returnUrl);\r\n+      } else {\r\n+        throw new Error('Réponse de token invalide');\r\n       }\r\n-    });\r\n+    } catch (error) {\r\n+      console.error('Erreur auth', error);\r\n+      await this.router.navigate(['/error'], { \r\n+        queryParams: { error: 'google_auth_failed' } \r\n+      });\r\n+    }\r\n   }\r\n }\r\n-}\r\n"
                },
                {
                    "date": 1748632610459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     }\r\n \r\n     try {\r\n       const tokenResponse = await this.http.post<any>(\r\n-        '/email/auth/google/callback', \r\n+        'https://e8.systeo.tn/auth/google/callback', \r\n         { code }\r\n       ).toPromise();\r\n \r\n       if (tokenResponse?.access_token) {\r\n"
                },
                {
                    "date": 1748637269228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,53 +10,5 @@\n   template: '<p>Authentification en cours...</p>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n \r\n-\r\n-  constructor(\r\n-    private route: ActivatedRoute,\r\n-    private googleAuthService: GoogleAuthService,\r\n-    private http: HttpClient,\r\n-    private router: Router\r\n-  ) {}\r\n-\r\n-   async ngOnInit() {\r\n-    const code = this.route.snapshot.queryParamMap.get('code');\r\n-    const error = this.route.snapshot.queryParamMap.get('error');\r\n-    \r\n-    if (error) {\r\n-      console.error('Erreur Google Auth:', error);\r\n-      await this.router.navigate(['/error'], { queryParams: { error } });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!code) {\r\n-      await this.router.navigate(['/']);\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const tokenResponse = await this.http.post<any>(\r\n-        'https://e8.systeo.tn/auth/google/callback', \r\n-        { code }\r\n-      ).toPromise();\r\n-\r\n-      if (tokenResponse?.access_token) {\r\n-        this.googleAuthService.setGoogleAccessToken(\r\n-          tokenResponse.access_token,\r\n-          tokenResponse.refresh_token\r\n-        );\r\n-        \r\n-        // Récupérer l'URL d'origine ou utiliser '/emails' par défaut\r\n-        const returnUrl = this.googleAuthService.getReturnUrl() || '/emails';\r\n-        await this.router.navigateByUrl(returnUrl);\r\n-      } else {\r\n-        throw new Error('Réponse de token invalide');\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Erreur auth', error);\r\n-      await this.router.navigate(['/error'], { \r\n-        queryParams: { error: 'google_auth_failed' } \r\n-      });\r\n-    }\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1748638675523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,45 @@\n import { lastValueFrom, take } from 'rxjs';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n-  template: '<p>Authentification en cours...</p>'\r\n+  template: '<div>Authentification en cours...</div>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n+  constructor(\r\n+    private authService: GoogleAuthService,\r\n+    private router: Router,\r\n+    private route: ActivatedRoute\r\n+  ) {}\r\n \r\n+  ngOnInit() {\r\n+    console.log('Callback component initialized'); // Debug\r\n+    \r\n+    this.authService.handleCallback().subscribe({\r\n+      next: (success) => {\r\n+        console.log('Auth result:', success); // Debug\r\n+        if (success) {\r\n+          const returnUrl = this.getReturnUrl();\r\n+          console.log('Redirecting to:', returnUrl); // Debug\r\n+          this.router.navigateByUrl(returnUrl);\r\n+        } else {\r\n+          console.error('Authentication failed');\r\n+          this.router.navigate(['/login'], { \r\n+            queryParams: { error: 'google_auth_failed' } \r\n+          });\r\n+        }\r\n+      },\r\n+      error: (err) => {\r\n+        console.error('Auth error:', err);\r\n+        this.router.navigate(['/login'], { \r\n+          queryParams: { error: 'google_auth_error' } \r\n+        });\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  private getReturnUrl(): string {\r\n+    const url = new URL(window.location.href);\r\n+    const state = url.searchParams.get('state');\r\n+    return state || '/emails';\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1748640953258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,10 @@\n   template: '<div>Authentification en cours...</div>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n-    private authService: GoogleAuthService,\r\n-    private router: Router,\r\n-    private route: ActivatedRoute\r\n+   private authService: AuthService,\r\n+    private router: Router\r\n   ) {}\r\n \r\n   ngOnInit() {\r\n     console.log('Callback component initialized'); // Debug\r\n"
                },
                {
                    "date": 1748640973606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,36 +14,24 @@\n    private authService: AuthService,\r\n     private router: Router\r\n   ) {}\r\n \r\n-  ngOnInit() {\r\n-    console.log('Callback component initialized'); // Debug\r\n+  async ngOnInit() {\r\n+    // 1. Traiter le callback Google\r\n+    const googleSuccess = await this.authService.handleGoogleCallback();\r\n     \r\n-    this.authService.handleCallback().subscribe({\r\n-      next: (success) => {\r\n-        console.log('Auth result:', success); // Debug\r\n-        if (success) {\r\n-          const returnUrl = this.getReturnUrl();\r\n-          console.log('Redirecting to:', returnUrl); // Debug\r\n-          this.router.navigateByUrl(returnUrl);\r\n-        } else {\r\n-          console.error('Authentication failed');\r\n-          this.router.navigate(['/login'], { \r\n-            queryParams: { error: 'google_auth_failed' } \r\n-          });\r\n-        }\r\n-      },\r\n-      error: (err) => {\r\n-        console.error('Auth error:', err);\r\n-        this.router.navigate(['/login'], { \r\n-          queryParams: { error: 'google_auth_error' } \r\n-        });\r\n-      }\r\n-    });\r\n-  }\r\n+    if (!googleSuccess) {\r\n+      this.router.navigate(['/error'], { queryParams: { error: 'google_auth_failed' } });\r\n+      return;\r\n+    }\r\n \r\n-  private getReturnUrl(): string {\r\n-    const url = new URL(window.location.href);\r\n-    const state = url.searchParams.get('state');\r\n-    return state || '/emails';\r\n+    // 2. Vérifier que Keycloak est toujours authentifié\r\n+    if (!this.authService.isAuthenticated()) {\r\n+      this.router.navigate(['/login']);\r\n+      return;\r\n+    }\r\n+\r\n+    // 3. Rediriger vers la page demandée\r\n+    const returnUrl = localStorage.getItem('google_return_url') || '/emails';\r\n+    this.router.navigateByUrl(returnUrl);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1748641581949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,24 +14,36 @@\n    private authService: AuthService,\r\n     private router: Router\r\n   ) {}\r\n \r\n-  async ngOnInit() {\r\n-    // 1. Traiter le callback Google\r\n-    const googleSuccess = await this.authService.handleGoogleCallback();\r\n+  ngOnInit() {\r\n+    console.log('Callback component initialized'); // Debug\r\n     \r\n-    if (!googleSuccess) {\r\n-      this.router.navigate(['/error'], { queryParams: { error: 'google_auth_failed' } });\r\n-      return;\r\n-    }\r\n+    this.authService.handleCallback().subscribe({\r\n+      next: (success) => {\r\n+        console.log('Auth result:', success); // Debug\r\n+        if (success) {\r\n+          const returnUrl = this.getReturnUrl();\r\n+          console.log('Redirecting to:', returnUrl); // Debug\r\n+          this.router.navigateByUrl(returnUrl);\r\n+        } else {\r\n+          console.error('Authentication failed');\r\n+          this.router.navigate(['/login'], { \r\n+            queryParams: { error: 'google_auth_failed' } \r\n+          });\r\n+        }\r\n+      },\r\n+      error: (err) => {\r\n+        console.error('Auth error:', err);\r\n+        this.router.navigate(['/login'], { \r\n+          queryParams: { error: 'google_auth_error' } \r\n+        });\r\n+      }\r\n+    });\r\n+  }\r\n \r\n-    // 2. Vérifier que Keycloak est toujours authentifié\r\n-    if (!this.authService.isAuthenticated()) {\r\n-      this.router.navigate(['/login']);\r\n-      return;\r\n-    }\r\n-\r\n-    // 3. Rediriger vers la page demandée\r\n-    const returnUrl = localStorage.getItem('google_return_url') || '/emails';\r\n-    this.router.navigateByUrl(returnUrl);\r\n+  private getReturnUrl(): string {\r\n+    const url = new URL(window.location.href);\r\n+    const state = url.searchParams.get('state');\r\n+    return state || '/emails';\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1748642176574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,15 @@\n import { lastValueFrom, take } from 'rxjs';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n-  template: '<div>Authentification en cours...</div>'\r\n+  template: '<div>Connexion Google en cours...</div>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n-   private authService: AuthService,\r\n-    private router: Router\r\n+    private authService: GoogleAuthService,\r\n+    private router: Router,\r\n+    private route: ActivatedRoute\r\n   ) {}\r\n \r\n   ngOnInit() {\r\n     console.log('Callback component initialized'); // Debug\r\n"
                },
                {
                    "date": 1748642197171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,36 +15,14 @@\n     private router: Router,\r\n     private route: ActivatedRoute\r\n   ) {}\r\n \r\n-  ngOnInit() {\r\n-    console.log('Callback component initialized'); // Debug\r\n-    \r\n-    this.authService.handleCallback().subscribe({\r\n-      next: (success) => {\r\n-        console.log('Auth result:', success); // Debug\r\n-        if (success) {\r\n-          const returnUrl = this.getReturnUrl();\r\n-          console.log('Redirecting to:', returnUrl); // Debug\r\n-          this.router.navigateByUrl(returnUrl);\r\n-        } else {\r\n-          console.error('Authentication failed');\r\n-          this.router.navigate(['/login'], { \r\n-            queryParams: { error: 'google_auth_failed' } \r\n-          });\r\n-        }\r\n-      },\r\n-      error: (err) => {\r\n-        console.error('Auth error:', err);\r\n-        this.router.navigate(['/login'], { \r\n-          queryParams: { error: 'google_auth_error' } \r\n+   ngOnInit() {\r\n+    this.googleAuth.handleCallback().then(success => {\r\n+      if (!success) {\r\n+        this.router.navigate(['/error'], { \r\n+          queryParams: { error: 'google_failed' } \r\n         });\r\n       }\r\n     });\r\n   }\r\n-\r\n-  private getReturnUrl(): string {\r\n-    const url = new URL(window.location.href);\r\n-    const state = url.searchParams.get('state');\r\n-    return state || '/emails';\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1748642204203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   template: '<div>Connexion Google en cours...</div>'\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n-    private authService: GoogleAuthService,\r\n+    private google: GoogleAuthService,\r\n     private router: Router,\r\n     private route: ActivatedRoute\r\n   ) {}\r\n \r\n"
                },
                {
                    "date": 1748649253963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,22 @@\n import { lastValueFrom, take } from 'rxjs';\r\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n-  template: '<div>Connexion Google en cours...</div>'\r\n+   template: `\r\n+    <div *ngIf=\"!error; else errorBlock\">\r\n+      <p>Connexion en cours...</p>\r\n+      <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n+    </div>\r\n+    <ng-template #errorBlock>\r\n+      <p>Échec de la connexion Google</p>\r\n+      <button mat-button (click)=\"retry()\">Réessayer</button>\r\n+    </ng-template>\r\n+  `\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n   constructor(\r\n-    private google: GoogleAuthService,\r\n+    private googleAuth: GoogleAuthService,\r\n     private router: Router,\r\n     private route: ActivatedRoute\r\n   ) {}\r\n \r\n"
                },
                {
                    "date": 1748649260645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n    template: `\r\n-    <div *ngIf=\"!error; else errorBlock\">\r\n+    <div *ngIf=\"!console.error();\r\n+    ; else errorBlock\">\r\n       <p>Connexion en cours...</p>\r\n       <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n     </div>\r\n     <ng-template #errorBlock>\r\n"
                },
                {
                    "date": 1748649272850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,9 @@\n \r\n @Component({\r\n   selector: 'app-google-callback',\r\n    template: `\r\n-    <div *ngIf=\"!console.error();\r\n-    ; else errorBlock\">\r\n+    <div *ngIf=\"!error; else errorBlock\">\r\n       <p>Connexion en cours...</p>\r\n       <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\r\n     </div>\r\n     <ng-template #errorBlock>\r\n@@ -19,8 +18,9 @@\n     </ng-template>\r\n   `\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n+  \r\n   constructor(\r\n     private googleAuth: GoogleAuthService,\r\n     private router: Router,\r\n     private route: ActivatedRoute\r\n"
                },
                {
                    "date": 1748649292925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,21 +18,42 @@\n     </ng-template>\r\n   `\r\n })\r\n export class GoogleCallbackComponent implements OnInit {\r\n-  \r\n+  error = false;\r\n   constructor(\r\n     private googleAuth: GoogleAuthService,\r\n     private router: Router,\r\n     private route: ActivatedRoute\r\n   ) {}\r\n \r\n-   ngOnInit() {\r\n-    this.googleAuth.handleCallback().then(success => {\r\n-      if (!success) {\r\n-        this.router.navigate(['/error'], { \r\n-          queryParams: { error: 'google_failed' } \r\n-        });\r\n+   async ngOnInit() {\r\n+    await this.processCallback();\r\n+  }\r\n+\r\n+  private async processCallback() {\r\n+    try {\r\n+      const success = await this.googleAuth.handleCallback();\r\n+      \r\n+      if (success) {\r\n+        const returnUrl = this.getReturnUrl();\r\n+        console.log('Redirection vers:', returnUrl); // Debug\r\n+        await this.router.navigateByUrl(returnUrl);\r\n+      } else {\r\n+        this.error = true;\r\n       }\r\n-    });\r\n+    } catch (error) {\r\n+      console.error('Erreur lors du traitement:', error);\r\n+      this.error = true;\r\n+    }\r\n   }\r\n+\r\n+  private getReturnUrl(): string {\r\n+    const url = new URL(window.location.href);\r\n+    return url.searchParams.get('state') || '/emails';\r\n+  }\r\n+\r\n+  retry() {\r\n+    this.error = false;\r\n+    this.processCallback();\r\n+  }\r\n }\r\n"
                }
            ],
            "date": 1748598260835,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-google-callback',\r\n  templateUrl: './google-callback.component.html',\r\n  styleUrl: './google-callback.component.scss'\r\n})\r\nexport class GoogleCallbackComponent {\r\n\r\n  \r\n}\r\n"
        }
    ]
}